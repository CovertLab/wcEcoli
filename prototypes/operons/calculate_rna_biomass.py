import numpy as np

sequence = 'AUGGCAAUCCACAAUCGUGCAGGCCAACCUGCACAACAGAGUGAUUUGAUUAACGUCGCCCAACUGACGGCGCAAUAUUAUGUACUGAAACCAGAAGCAGGGAAUGCGGAGCACGCGGUGAAAUUCGGUACUUCCGGUCACCGUGGCAGUGCAGCGCGCCACAGCUUUAACGAGCCGCACAUUCUGGCGAUCGCUCAGGCAAUUGCUGAAGAACGUGCGAAAAACGGCAUCACUGGCCCUUGCUAUGUGGGUAAAGAUACUCACGCCCUGUCCGAACCUGCAUUCAUUUCCGUUCUGGAAGUGCUGGCAGCGAACGGCGUUGAUGUCAUUGUGCAGGAAAACAAUGGCUUCACCCCGACGCCUGCCGUUUCCAAUGCCAUCCUGGUUCACAAUAAAAAAGGUGGCCCGCUGGCAGACGGUAUCGUGAUUACACCGUCCCAUAACCCGCCGGAAGAUGGUGGAAUCAAAUACAAUCCGCCAAAUGGUGGCCCGGCUGAUACCAACGUCACUAAAGUGGUGGAAGACAGGGCCAACGCACUGCUGGCCGAUGGCCUGAAAGGCGUGAAGCGUAUCUCCCUCGACGAAGCGAUGGCAUCCGGUCAUGUGAAAGAGCAGGAUCUGGUGCAGCCGUUCGUGGAAGGUCUGGCCGAUAUCGUUGAUAUGGCCGCGAUUCAGAAAGCGGGCCUGACGCUGGGCGUUGAUCCGCUGGGCGGUUCCGGUAUCGAAUACUGGAAGCGUAUUGGCGAGUAUUACAACCUCAACCUGACUAUCGUUAACGAUCAGGUCGAUCAAACCUUCCGCUUUAUGCACCUUGAUAAAGACGGCGCGAUCCGUAUGGACUGCUCCUCCGAGUGUGCGAUGGCGGGCCUGCUGGCACUGCGUGAUAAGUUCGAUCUGGCGUUUGCUAACGACCCGGAUUAUGACCGUCACGGUAUCGUCACUCCGGCAGGUUUGAUGAAUCCGAACCACUACCUGGCGGUGGCAAUCAAUUACCUGUUCCAGCAUCGUCCGCAGUGGGGCAAAGAUGUUGCCGUCGGUAAAACGCUGGUUUCAUCUGCGAUGAUCGACCGUGUGGUCAACGACUUGGGCCGUAAACUGGUAGAAGUCCCGGUAGGUUUCAAAUGGUUUGUCGAUGGUCUGUUCGACGGCAGCUUCGGCUUUGGCGGCGAAGAGAGUGCAGGGGCUUCCUUCCUGCGUUUCGACGGCACGCCGUGGUCCACCGACAAAGACGGCAUCAUCAUGUGUCUGCUGGCGGCGGAAAUCACCGCUGUCACCGGUAAGAACCCGCAGGAACACUACAACGAACUGGCAAAACGCUUUGGUGCGCCGAGCUACAACCGUUUGCAGGCAGCUGCGACUUCCGCACAAAAAGCGGCGCUGUCUAAGCUGUCUCCGGAAAUGGUGAGCGCCAGCACCCUGGCAGGUGACCCGAUCACCGCGCGCCUGACUGCUGCUCCGGGCAACGGUGCUUCUAUUGGCGGUCUGAAAGUGAUGACUGACAACGGCUGGUUCGCCGCGCGUCCGUCAGGCACGGAAGACGCAUAUAAGAUCUACUGCGAAAGCUUCCUCGGUGAAGAACAUCGCAAGCAGAUUGAGAAAGAAGCGGUUGAGAUUGUUAGCGAAGUUCUGAAAAACGCGUAA'
seqApgm_mRNA_seq = "AUGAAAACGAUUGAAGUUGAUGAUGAACUCUACAGCUAUAUUGCCAGCCACACUAAGCAUAUCGGCGAGAGCGCAUCCGACAUUUUACGGCGUAUGUUGAAAUUUUCCGCCGCAUCACAGCCUGCUGCUCCGGUGACGAAAGAGGUUCGCGUUGCGUCACCUGCUAUCGUCGAAGCGAAGCCGGUCAAAACGAUUAAAGACAAGGUUCGCGCAAUGCGUGAACUUCUGCUUUCGGAUGAAUACGCAGAGCAAAAGCGAGCGGUCAAUCGCUUUAUGCUGCUGUUGUCUACACUAUAUUCUCUUGACGCCCAGGCGUUUGCCGAAGCAACGGAAUCGUUGCACGGUCGUACACGCGUUUACUUUGCGGCAGAUGAACAAACGCUGCUGAAAAAUGGUAAUCAGACCAAGCCGAAACAUGUGCCAGGCACGCCGUAUUGGGUGAUCACCAACACCAACACCGGCCGUAAAUGCAGCAUGAUCGAACACAUCAUGCAGUCGAUGCAAUUCCCGGCGGAAUUGAUUGAGAAGGUUUGCGGAACUAUCUAAAACGUUGCAGACAAAGGACAAAGCAAUGGCAAUCCACAAUCGUGCAGGCCAACCUGCACAACAGAGUGAUUUGAUUAACGUCGCCCAACUGACGGCGCAAUAUUAUGUACUGAAACCAGAAGCAGGGAAUGCGGAGCACGCGGUGAAAUUCGGUACUUCCGGUCACCGUGGCAGUGCAGCGCGCCACAGCUUUAACGAGCCGCACAUUCUGGCGAUCGCUCAGGCAAUUGCUGAAGAACGUGCGAAAAACGGCAUCACUGGCCCUUGCUAUGUGGGUAAAGAUACUCACGCCCUGUCCGAACCUGCAUUCAUUUCCGUUCUGGAAGUGCUGGCAGCGAACGGCGUUGAUGUCAUUGUGCAGGAAAACAAUGGCUUCACCCCGACGCCUGCCGUUUCCAAUGCCAUCCUGGUUCACAAUAAAAAAGGUGGCCCGCUGGCAGACGGUAUCGUGAUUACACCGUCCCAUAACCCGCCGGAAGAUGGUGGAAUCAAAUACAAUCCGCCAAAUGGUGGCCCGGCUGAUACCAACGUCACUAAAGUGGUGGAAGACAGGGCCAACGCACUGCUGGCCGAUGGCCUGAAAGGCGUGAAGCGUAUCUCCCUCGACGAAGCGAUGGCAUCCGGUCAUGUGAAAGAGCAGGAUCUGGUGCAGCCGUUCGUGGAAGGUCUGGCCGAUAUCGUUGAUAUGGCCGCGAUUCAGAAAGCGGGCCUGACGCUGGGCGUUGAUCCGCUGGGCGGUUCCGGUAUCGAAUACUGGAAGCGUAUUGGCGAGUAUUACAACCUCAACCUGACUAUCGUUAACGAUCAGGUCGAUCAAACCUUCCGCUUUAUGCACCUUGAUAAAGACGGCGCGAUCCGUAUGGACUGCUCCUCCGAGUGUGCGAUGGCGGGCCUGCUGGCACUGCGUGAUAAGUUCGAUCUGGCGUUUGCUAACGACCCGGAUUAUGACCGUCACGGUAUCGUCACUCCGGCAGGUUUGAUGAAUCCGAACCACUACCUGGCGGUGGCAAUCAAUUACCUGUUCCAGCAUCGUCCGCAGUGGGGCAAAGAUGUUGCCGUCGGUAAAACGCUGGUUUCAUCUGCGAUGAUCGACCGUGUGGUCAACGACUUGGGCCGUAAACUGGUAGAAGUCCCGGUAGGUUUCAAAUGGUUUGUCGAUGGUCUGUUCGACGGCAGCUUCGGCUUUGGCGGCGAAGAGAGUGCAGGGGCUUCCUUCCUGCGUUUCGACGGCACGCCGUGGUCCACCGACAAAGACGGCAUCAUCAUGUGUCUGCUGGCGGCGGAAAUCACCGCUGUCACCGGUAAGAACCCGCAGGAACACUACAACGAACUGGCAAAACGCUUUGGUGCGCCGAGCUACAACCGUUUGCAGGCAGCUGCGACUUCCGCACAAAAAGCGGCGCUGUCUAAGCUGUCUCCGGAAAUGGUGAGCGCCAGCACCCUGGCAGGUGACCCGAUCACCGCGCGCCUGACUGCUGCUCCGGGCAACGGUGCUUCUAUUGGCGGUCUGAAAGUGAUGACUGACAACGGCUGGUUCGCCGCGCGUCCGUCAGGCACGGAAGACGCAUAUAAGAUCUACUGCGAAAGCUUCCUCGGUGAAGAACAUCGCAAGCAGAUUGAGAAAGAAGCGGUUGAGAUUGUUAGCGAAGUUCUGAAAAACGCGUAA"
seqA_mRNA_seq = "AUGAAAACGAUUGAAGUUGAUGAUGAACUCUACAGCUAUAUUGCCAGCCACACUAAGCAUAUCGGCGAGAGCGCAUCCGACAUUUUACGGCGUAUGUUGAAAUUUUCCGCCGCAUCACAGCCUGCUGCUCCGGUGACGAAAGAGGUUCGCGUUGCGUCACCUGCUAUCGUCGAAGCGAAGCCGGUCAAAACGAUUAAAGACAAGGUUCGCGCAAUGCGUGAACUUCUGCUUUCGGAUGAAUACGCAGAGCAAAAGCGAGCGGUCAAUCGCUUUAUGCUGCUGUUGUCUACACUAUAUUCUCUUGACGCCCAGGCGUUUGCCGAAGCAACGGAAUCGUUGCACGGUCGUACACGCGUUUACUUUGCGGCAGAUGAACAAACGCUGCUGAAAAAUGGUAAUCAGACCAAGCCGAAACAUGUGCCAGGCACGCCGUAUUGGGUGAUCACCAACACCAACACCGGCCGUAAAUGCAGCAUGAUCGAACACAUCAUGCAGUCGAUGCAAUUCCCGGCGGAAUUGAUUGAGAAGGUUUGCGGAACUAUCUAA"

rna_masses = {
	"A": 503.15,
	"C": 479.124,
	"G": 519.149,
	"U": 480.108,
}

ppi_mass = 174.949

base_order = ['A', 'C', 'G', 'U']
ntp_order = {base + 'TP': index for index, base in enumerate(base_order)}

def rna_biomass(sequence):
	counts = {base: (rna_masses[base] - ppi_mass) * sequence.count(base) for base in base_order}
	return np.sum(counts.values()) + ppi_mass




