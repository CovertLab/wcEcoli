
REACTIONS = [
	'NADH-DEHYDROG-A-RXN-NADH/UBIQUINONE-8/PROTON//NAD/CPD-9956/PROTON.46. (reverse)',
	'PSERTRANSAM-RXN',
	'GLUTATHIONE-REDUCT-NADPH-RXN',
	'INORGPYROPHOSPHAT-RXN[CCO-CYTOSOL]-PPI/WATER//Pi/PROTON.34.',
	'XANPRIBOSYLTRAN-RXN',
	'SUCCINATE-DEHYDROGENASE-UBIQUINONE-RXN-SUC/UBIQUINONE-8//FUM/CPD-9956.31.',
	'R601-RXN-FUM/REDUCED-MENAQUINONE//SUC/CPD-9728.38.',
	]

# N, P GT, I, GX, X, F, SUC
# +1 = disabled, -1 = enabled
EXPERIMENTS = [
	[-1, -1, -1, -1, -1, -1, -1],
	[+1, -1, -1, -1, -1, -1, -1],
	[-1, +1, -1, -1, -1, -1, -1],
	[+1, +1, -1, -1, -1, -1, -1],
	[-1, -1, +1, -1, -1, -1, -1],
	[+1, -1, +1, -1, -1, -1, -1],
	[-1, +1, +1, -1, -1, -1, -1],
	[+1, +1, +1, -1, -1, -1, -1],
	[-1, -1, -1, +1, -1, -1, -1],
	[+1, -1, -1, +1, -1, -1, -1],
	[-1, +1, -1, +1, -1, -1, -1],
	[+1, +1, -1, +1, -1, -1, -1],
	[-1, -1, +1, +1, -1, -1, -1],
	[+1, -1, +1, +1, -1, -1, -1],
	[-1, +1, +1, +1, -1, -1, -1],
	[+1, +1, +1, +1, -1, -1, -1],
	[-1, -1, -1, -1, +1, -1, -1],
	[+1, -1, -1, -1, +1, -1, -1],
	[-1, +1, -1, -1, +1, -1, -1],
	[+1, +1, -1, -1, +1, -1, -1],
	[-1, -1, +1, -1, +1, -1, -1],
	[+1, -1, +1, -1, +1, -1, -1],
	[-1, +1, +1, -1, +1, -1, -1],
	[+1, +1, +1, -1, +1, -1, -1],
	[-1, -1, -1, +1, +1, -1, -1],
	[+1, -1, -1, +1, +1, -1, -1],
	[-1, +1, -1, +1, +1, -1, -1],
	[+1, +1, -1, +1, +1, -1, -1],
	[-1, -1, +1, +1, +1, -1, -1],
	[+1, -1, +1, +1, +1, -1, -1],
	[-1, +1, +1, +1, +1, -1, -1],
	[+1, +1, +1, +1, +1, -1, -1],
	[-1, -1, -1, -1, -1, +1, -1],
	[+1, -1, -1, -1, -1, +1, -1],
	[-1, +1, -1, -1, -1, +1, -1],
	[+1, +1, -1, -1, -1, +1, -1],
	[-1, -1, +1, -1, -1, +1, -1],
	[+1, -1, +1, -1, -1, +1, -1],
	[-1, +1, +1, -1, -1, +1, -1],
	[+1, +1, +1, -1, -1, +1, -1],
	[-1, -1, -1, +1, -1, +1, -1],
	[+1, -1, -1, +1, -1, +1, -1],
	[-1, +1, -1, +1, -1, +1, -1],
	[+1, +1, -1, +1, -1, +1, -1],
	[-1, -1, +1, +1, -1, +1, -1],
	[+1, -1, +1, +1, -1, +1, -1],
	[-1, +1, +1, +1, -1, +1, -1],
	[+1, +1, +1, +1, -1, +1, -1],
	[-1, -1, -1, -1, +1, +1, -1],
	[+1, -1, -1, -1, +1, +1, -1],
	[-1, +1, -1, -1, +1, +1, -1],
	[+1, +1, -1, -1, +1, +1, -1],
	[-1, -1, +1, -1, +1, +1, -1],
	[+1, -1, +1, -1, +1, +1, -1],
	[-1, +1, +1, -1, +1, +1, -1],
	[+1, +1, +1, -1, +1, +1, -1],
	[-1, -1, -1, +1, +1, +1, -1],
	[+1, -1, -1, +1, +1, +1, -1],
	[-1, +1, -1, +1, +1, +1, -1],
	[+1, +1, -1, +1, +1, +1, -1],
	[-1, -1, +1, +1, +1, +1, -1],
	[+1, -1, +1, +1, +1, +1, -1],
	[-1, +1, +1, +1, +1, +1, -1],
	[+1, +1, +1, +1, +1, +1, -1],
	[-1, -1, -1, -1, -1, -1, +1],
	[+1, -1, -1, -1, -1, -1, +1],
	[-1, +1, -1, -1, -1, -1, +1],
	[+1, +1, -1, -1, -1, -1, +1],
	[-1, -1, +1, -1, -1, -1, +1],
	[+1, -1, +1, -1, -1, -1, +1],
	[-1, +1, +1, -1, -1, -1, +1],
	[+1, +1, +1, -1, -1, -1, +1],
	[-1, -1, -1, +1, -1, -1, +1],
	[+1, -1, -1, +1, -1, -1, +1],
	[-1, +1, -1, +1, -1, -1, +1],
	[+1, +1, -1, +1, -1, -1, +1],
	[-1, -1, +1, +1, -1, -1, +1],
	[+1, -1, +1, +1, -1, -1, +1],
	[-1, +1, +1, +1, -1, -1, +1],
	[+1, +1, +1, +1, -1, -1, +1],
	[-1, -1, -1, -1, +1, -1, +1],
	[+1, -1, -1, -1, +1, -1, +1],
	[-1, +1, -1, -1, +1, -1, +1],
	[+1, +1, -1, -1, +1, -1, +1],
	[-1, -1, +1, -1, +1, -1, +1],
	[+1, -1, +1, -1, +1, -1, +1],
	[-1, +1, +1, -1, +1, -1, +1],
	[+1, +1, +1, -1, +1, -1, +1],
	[-1, -1, -1, +1, +1, -1, +1],
	[+1, -1, -1, +1, +1, -1, +1],
	[-1, +1, -1, +1, +1, -1, +1],
	[+1, +1, -1, +1, +1, -1, +1],
	[-1, -1, +1, +1, +1, -1, +1],
	[+1, -1, +1, +1, +1, -1, +1],
	[-1, +1, +1, +1, +1, -1, +1],
	[+1, +1, +1, +1, +1, -1, +1],
	[-1, -1, -1, -1, -1, +1, +1],
	[+1, -1, -1, -1, -1, +1, +1],
	[-1, +1, -1, -1, -1, +1, +1],
	[+1, +1, -1, -1, -1, +1, +1],
	[-1, -1, +1, -1, -1, +1, +1],
	[+1, -1, +1, -1, -1, +1, +1],
	[-1, +1, +1, -1, -1, +1, +1],
	[+1, +1, +1, -1, -1, +1, +1],
	[-1, -1, -1, +1, -1, +1, +1],
	[+1, -1, -1, +1, -1, +1, +1],
	[-1, +1, -1, +1, -1, +1, +1],
	[+1, +1, -1, +1, -1, +1, +1],
	[-1, -1, +1, +1, -1, +1, +1],
	[+1, -1, +1, +1, -1, +1, +1],
	[-1, +1, +1, +1, -1, +1, +1],
	[+1, +1, +1, +1, -1, +1, +1],
	[-1, -1, -1, -1, +1, +1, +1],
	[+1, -1, -1, -1, +1, +1, +1],
	[-1, +1, -1, -1, +1, +1, +1],
	[+1, +1, -1, -1, +1, +1, +1],
	[-1, -1, +1, -1, +1, +1, +1],
	[+1, -1, +1, -1, +1, +1, +1],
	[-1, +1, +1, -1, +1, +1, +1],
	[+1, +1, +1, -1, +1, +1, +1],
	[-1, -1, -1, +1, +1, +1, +1],
	[+1, -1, -1, +1, +1, +1, +1],
	[-1, +1, -1, +1, +1, +1, +1],
	[+1, +1, -1, +1, +1, +1, +1],
	[-1, -1, +1, +1, +1, +1, +1],
	[+1, -1, +1, +1, +1, +1, +1],
	[-1, +1, +1, +1, +1, +1, +1],
	[+1, +1, +1, +1, +1, +1, +1]]


def metabolism_kinetic_objective_interactions_indices(sim_data):
	return len(EXPERIMENTS)

def metabolism_kinetic_objective_interactions(sim_data, index):

	experiment = EXPERIMENTS[index]

	# get disabled reactions by index
	disabled_reactions = [REACTIONS[reaction_index] for reaction_index, disabled in enumerate(experiment) if disabled == +1]

	print('variant {}: disable {}'.format(index, str(disabled_reactions)))

	sim_data.process.metabolism.additional_disabled = disabled_reactions

	experiment_str = str(disabled_reactions)
	return dict(
		shortName="disabled reactions = {}".format(experiment_str),
		desc="Simulation with disabled kinetic targets for {}.".format(experiment_str)
		), sim_data
