#!/usr/bin/env python

"""
Metabolism

Metabolism sub-model. Encodes molecular simulation of microbial metabolism using flux-balance analysis.

TODO:
- option to call a reduced form of metabolism (assume optimal)

@author: Derek Macklin
@organization: Covert Lab, Department of Bioengineering, Stanford University
@date: Created 4/2/2013
"""

from __future__ import division

from itertools import izip

import numpy as np
from scipy.sparse import csr_matrix

import wholecell.processes.process
from wholecell.utils import units

from wholecell.utils.random import stochasticRound
from wholecell.utils.constants import REQUEST_PRIORITY_METABOLISM

from wholecell.utils.modular_fba import FluxBalanceAnalysis
from wholecell.utils.enzymeKinetics import EnzymeKinetics

from wholecell.utils.fitting import massesAndCountsToAddForHomeostaticTargets

COUNTS_UNITS = units.dmol
VOLUME_UNITS = units.L
MASS_UNITS = units.g
TIME_UNITS = units.s

FLUX_UNITS = COUNTS_UNITS / VOLUME_UNITS / TIME_UNITS

SECRETION_PENALTY_COEFF = 1e-5

NONZERO_ENZYMES = True

USE_KINETIC_RATES = True
USE_BASE_RATES = True
KINETICS_BURN_IN_PERIOD = 0

class Metabolism(wholecell.processes.process.Process):
	""" Metabolism """

	_name = "Metabolism"

	# Constructor
	def __init__(self):

		super(Metabolism, self).__init__()

	# Construct object graph
	def initialize(self, sim, sim_data):
		super(Metabolism, self).initialize(sim, sim_data)

		self.sd = sim_data


		# Load constants
		self.nAvogadro = sim_data.constants.nAvogadro
		self.cellDensity = sim_data.constants.cellDensity

		self.exchangeConstraints = sim_data.process.metabolism.exchangeConstraints

		self.doublingTime = sim_data.doubling_time
		self.nutrientsTimeSeriesLabel = sim_data.nutrientsTimeSeriesLabel

		# Load enzyme kinetic rate information
		self.reactionRateInfo = sim_data.process.metabolism.reactionRateInfo
		self.enzymeNames = sim_data.process.metabolism.metabolicEnzymes
		self.constraintIDs = sim_data.process.metabolism.constraintIDs
		self.constraintMultiplesDict = {constraintID:rateInfo["constraintMultiple"] for constraintID, rateInfo in self.reactionRateInfo.iteritems()}
		self.constraintToReactionDict = sim_data.process.metabolism.constraintToReactionDict
		self.reactionEnzymes  = sim_data.process.metabolism.reactionEnzymes

		concDict = sim_data.process.metabolism.concentrationUpdates.concentrationsBasedOnNutrients(
			sim_data.nutrientsTimeSeries[sim_data.nutrientsTimeSeriesLabel][0][1]
			)
		self.concModificationsBasedOnCondition = sim_data.mass.getBiomassAsConcentrations(sim_data.conditionToDoublingTime[sim_data.condition])
		concDict.update(self.concModificationsBasedOnCondition)

		self.objective = dict(
			(key, concDict[key].asNumber(COUNTS_UNITS / VOLUME_UNITS)) for key in concDict
			)

		self.getMass = sim_data.getter.getMass
		self.massReconstruction = sim_data.mass
		self.avgCellToInitialCellConvFactor = sim_data.mass.avgCellToInitialCellConvFactor

		self.ngam = sim_data.constants.nonGrowthAssociatedMaintenance

		initWaterMass = sim_data.mass.avgCellWaterMassInit
		initDryMass = sim_data.mass.avgCellDryMassInit

		initCellMass = (
			initWaterMass
			+ initDryMass
			)

		self.energyCostPerWetMass = sim_data.constants.darkATP * initDryMass / initCellMass

		self.reactionStoich = sim_data.process.metabolism.reactionStoich
		self.externalExchangeMolecules = sim_data.nutrientData["secretionExchangeMolecules"]
		for time, nutrientsLabel in sim_data.nutrientsTimeSeries[self.nutrientsTimeSeriesLabel]:
			self.externalExchangeMolecules += sim_data.nutrientData["importExchangeMolecules"][nutrientsLabel]
		self.maintenanceReaction = sim_data.process.metabolism.maintenanceReaction
		self.externalExchangeMolecules = sorted(self.externalExchangeMolecules)
		self.extMoleculeMasses = self.getMass(self.externalExchangeMolecules)

		self.moleculeMasses = dict(zip(
			self.externalExchangeMolecules,
			self.getMass(self.externalExchangeMolecules).asNumber(MASS_UNITS / COUNTS_UNITS)
			))

		# Set up enzyme kinetics object
		self.enzymeKinetics = EnzymeKinetics(
			reactionRateInfo = sim_data.process.metabolism.reactionRateInfo,
			useCustoms=True,
			moreThanKcat=False, # Only compute rates for reactions with more than a kcat
		)

		# Remove kinetics for reactions for which we don't have needed metabolites or enzymes
		self.enzymeKinetics.checkKnownSubstratesAndEnzymes(sim_data.process.metabolism.concDict, self.enzymeNames, removeUnknowns=True)

		# Add reactions with a kinetic estimate
		self.allRateReactions = sorted(set([reactionInfo["reactionID"] for constraintID, reactionInfo in self.enzymeKinetics.reactionRateInfo.iteritems() if reactionInfo["reactionID"] in self.reactionStoich]))
		# Reactions with full kinetic estimates (more than just kcat)
		self.fullRateReactions = sorted(set([reactionInfo["reactionID"] for constraintID, reactionInfo in self.enzymeKinetics.reactionRateInfo.iteritems() if (len(reactionInfo["kM"]) > 0 or reactionInfo["rateEquationType"] == "custom") and reactionInfo["reactionID"] in self.reactionStoich]))
		# Reactions with a kcat-based kinetic estimate only (no customs, no kMs, no kIs)
		self.kcatRateReactions = sorted(set([reactionInfo["reactionID"] for constraintID, reactionInfo in self.enzymeKinetics.reactionRateInfo.iteritems() if reactionInfo["reactionID"] not in self.fullRateReactions and reactionInfo["reactionID"] in self.reactionStoich]))

		self.metabolismKineticObjectiveWeight = sim_data.constants.metabolismKineticObjectiveWeight

		# Set up FBA solver
		self.fbaObjectOptions = {
			"reactionStoich" : self.reactionStoich,
			"externalExchangedMolecules" : self.externalExchangeMolecules,
			"objective" : self.objective,
			"objectiveType" : "homeostatic_kinetics_mixed",
			"objectiveParameters" : {
					"kineticObjectiveWeight":self.metabolismKineticObjectiveWeight,
					"reactionRateTargets":{reaction:1e-5 for reaction in self.allRateReactions}, #This target is arbitrary, it gets reset each timestep during evolveState
					"oneSidedReactionTargets":self.kcatRateReactions,
					},
			"moleculeMasses" : self.moleculeMasses,
			"secretionPenaltyCoeff" : SECRETION_PENALTY_COEFF, # The "inconvenient constant"--limit secretion (e.g., of CO2)
			"solver" : "glpk",
			"maintenanceCostGAM" : self.energyCostPerWetMass.asNumber(COUNTS_UNITS / MASS_UNITS),
			"maintenanceReaction" : self.maintenanceReaction,
		}

		if USE_KINETIC_RATES==False:
			self.fbaObjectOptions["objectiveType"] = "homeostatic"

		self.fba = FluxBalanceAnalysis(**self.fbaObjectOptions)

		# Disable all rates during burn-in
		if KINETICS_BURN_IN_PERIOD > 0 and USE_KINETIC_RATES:
			self.fba.disableKineticTargets()
			self.burnInComplete = False
		else:
			self.burnInComplete = True

		# Indices for reactions with full kinetic esimates
		self.allRateIndices = np.where([True if reactionID in self.allRateReactions else False for reactionID in self.fba.reactionIDs()])

		self.allRateEstimates = FLUX_UNITS * np.zeros_like(self.allRateIndices)

		# Matrix mapping enzymes to the reactions they catalyze
		self.enzymeReactionMatrix = sim_data.process.metabolism.enzymeReactionMatrix(
			self.fba.reactionIDs(),
			self.enzymeNames,
			self.reactionEnzymes,
			)
		self.spontaneousIndices = np.where(np.sum(self.enzymeReactionMatrix, axis=1) == 0)
		self.enzymeReactionMatrix = csr_matrix(self.enzymeReactionMatrix)
		self.baseRates = FLUX_UNITS * np.inf * np.ones(len(self.fba.reactionIDs()))

		self.currentNgam = 1 * (COUNTS_UNITS / VOLUME_UNITS)
		self.currentPolypeptideElongationEnergy = 1 * (COUNTS_UNITS / VOLUME_UNITS)

		# Set constraints
		## External molecules
		self.externalMoleculeIDs = self.fba.externalMoleculeIDs()

		# Views
		self.metaboliteNames = self.fba.outputMoleculeIDs()
		self.metabolites = self.bulkMoleculesView(self.metaboliteNames)
		self.enzymes = self.bulkMoleculesView(self.enzymeNames)
			
		outputMoleculeIDs = self.fba.outputMoleculeIDs()

		assert outputMoleculeIDs == self.fba.internalMoleculeIDs()

		# Set the priority to a low value
		self.bulkMoleculesRequestPriorityIs(REQUEST_PRIORITY_METABOLISM)

		self.fitterPredictedFluxesDict = sim_data.process.metabolism.predictedFluxesDict

	def calculateRequest(self):
		self.metabolites.requestAll()
		self.enzymes.requestAll()

	def evolveState(self):
		# Solve for metabolic fluxes
		metaboliteCountsInit = self.metabolites.counts()

		cellMass = (self.readFromListener("Mass", "cellMass") * units.fg)
		dryMass = (self.readFromListener("Mass", "dryMass") * units.fg)

		cellVolume = cellMass / self.cellDensity

		countsToMolar = 1 / (self.nAvogadro * cellVolume)

		self.newPolypeptideElongationEnergy = countsToMolar * 0
		if hasattr(self._sim.processes["PolypeptideElongation"], "gtpRequest"):
			self.newPolypeptideElongationEnergy = countsToMolar * self._sim.processes["PolypeptideElongation"].gtpRequest

		# Set external molecule levels
		coefficient = dryMass / cellMass * self.cellDensity * (self.timeStepSec() * units.s)

		externalMoleculeLevels, newObjective = self.exchangeConstraints(
			self.externalMoleculeIDs,
			coefficient,
			COUNTS_UNITS / VOLUME_UNITS,
			self.nutrientsTimeSeriesLabel,
			self.time(),
			self.concModificationsBasedOnCondition,
			)

		if newObjective != None and newObjective != self.objective:
			# Build new fba instance with new objective
			self.fbaObjectOptions["objective"] = newObjective
			self.fba = FluxBalanceAnalysis(**self.fbaObjectOptions)
			massComposition = self.massReconstruction.getFractionMass(self.doublingTime)
			massInitial = (massComposition["proteinMass"] + massComposition["rnaMass"] + massComposition["dnaMass"]) / self.avgCellToInitialCellConvFactor
			objIds = sorted(self.objective)
			objConc = (COUNTS_UNITS / VOLUME_UNITS) * np.array([self.objective[x] for x in objIds])
			mws = self.getMass(objIds)
			massesToAdd, _ = massesAndCountsToAddForHomeostaticTargets(massInitial, objIds, objConc, mws, self.cellDensity, self.nAvogadro)
			smallMoleculeHomeostaticTargetsDryMass = units.hstack((massesToAdd[:objIds.index('WATER[c]')], massesToAdd[objIds.index('WATER[c]') + 1:]))
			totalDryMass = units.sum(smallMoleculeHomeostaticTargetsDryMass) + massInitial
			self.writeToListener("CellDivision", "expectedDryMassIncrease", totalDryMass)

		# After completing the burn-in, enable kinetic rates
		if self._sim.time() > KINETICS_BURN_IN_PERIOD and USE_KINETIC_RATES and not self.burnInComplete:
			self.burnInComplete = True
			self.fba.enableKineticTargets()

		# Set external molecule levels
		self.fba.externalMoleculeLevelsIs(externalMoleculeLevels)

		self.newNgam = self.ngam * coefficient

		# Change the ngam and polypeptide elongation energy penalty only if they are noticably different from the current value
		ADJUSTMENT_RATIO = .01
		ngam_diff = np.abs(self.currentNgam.asNumber() - self.newNgam.asNumber()) / (self.currentNgam.asNumber() + 1e-20)
		if ngam_diff > ADJUSTMENT_RATIO:
			self.currentNgam = self.newNgam
			self.fba.maxReactionFluxIs(self.fba._reactionID_NGAM, (self.ngam * coefficient).asNumber(COUNTS_UNITS / VOLUME_UNITS))
			self.fba.minReactionFluxIs(self.fba._reactionID_NGAM, (self.ngam * coefficient).asNumber(COUNTS_UNITS / VOLUME_UNITS))

		poly_diff = np.abs((self.currentPolypeptideElongationEnergy.asNumber() - self.newPolypeptideElongationEnergy.asNumber())) / (self.currentPolypeptideElongationEnergy.asNumber() + 1e-20)
		if poly_diff > ADJUSTMENT_RATIO:
			self.currentPolypeptideElongationEnergy = self.newPolypeptideElongationEnergy
			self.fba.maxReactionFluxIs(self.fba._reactionID_polypeptideElongationEnergy, self.currentPolypeptideElongationEnergy.asNumber(COUNTS_UNITS / VOLUME_UNITS))
			self.fba.minReactionFluxIs(self.fba._reactionID_polypeptideElongationEnergy, self.currentPolypeptideElongationEnergy.asNumber(COUNTS_UNITS / VOLUME_UNITS))

		#  Find metabolite concentrations from metabolite counts
		metaboliteConcentrations =  countsToMolar * metaboliteCountsInit

		# Make a dictionary of metabolite names to metabolite concentrations
		metaboliteConcentrationsDict = dict(zip(self.metaboliteNames, metaboliteConcentrations))

		self.fba.internalMoleculeLevelsIs(
			metaboliteConcentrations.asNumber(COUNTS_UNITS / VOLUME_UNITS)
			)

		#  Find enzyme concentrations from enzyme counts
		enzymeCountsInit = self.enzymes.counts()

		enzymeConcentrations = countsToMolar * enzymeCountsInit

		setenzymes = [	# essential enzymes with low probability of bein translated over 50 generations
						# 'DXPREDISOM-MONOMER[c]', 
						# 'CYDC-MONOMER[i]',
						# 'TNAB-MONOMER[i]',

						# 'EG11956-MONOMER[c]',
						# 'PANTEPADENYLYLTRAN-MONOMER[c]',
						# 'GLUTRNAREDUCT-MONOMER[c]',
						# 'PHOSPHAGLYPSYN-MONOMER[i]',
						# 'EG11372-MONOMER[c]',
						# 'EG12424-MONOMER[c]',
						# 'EG11294-MONOMER[c]',
						# 'EG11816-MONOMER[c]',

						# non-essential 
						# '2-OCTAPRENYL-METHOXY-BENZOQ-METH-MONOMER[c]', 

						# essential enzymes with null flux (NONZERO_ENZYMES = False) and positive flux (NONZERO_ENZYMES = True)
						# '3-OXOACYL-ACP-REDUCT-MONOMER[c]',
						# 'FABB-MONOMER[c]',
						# 'FOLC-MONOMER[c]',
						# 'GTP-CYCLOHYDRO-I-MONOMER[c]',
						# 'H2PTERIDINEPYROPHOSPHOKIN-MONOMER[c]'

						# 6-hydroxymethyl-dihydropterin diphosphate biosynthesis I pathway
						# 'GTP-CYCLOHYDRO-I-MONOMER[c]',
						# 'H2PTERIDINEPYROPHOSPHOKIN-MONOMER[c]',
						# 'H2NEOPTERINALDOL-MONOMER[c]',
						# 'H2NEOPTERINP3PYROPHOSPHOHYDRO-MONOMER[c]',

						# Fatty acids-related pathway (acetoacetyl)
						# 'FABB-MONOMER[c]',
						# '3-OXOACYL-ACP-REDUCT-MONOMER[c]',

						# null flux (NONZERO_ENZYMES = False) and positive flux (NONZERO_ENZYMES = True)
						# '2-OCTAPRENYL-METHOXY-BENZOQ-METH-MONOMER[c]',
						# '3-OXOACYL-ACP-REDUCT-MONOMER[c]',
						# 'ACYLCOADEHYDROG-MONOMER[c]',
						# 'ACYLCOADEHYDROG-MONOMER[i]',
						# 'ADCLY-MONOMER[c]',
						# 'ADENYLYLSULFKIN-MONOMER[c]',
						# 'ALPHACOMP-MONOMER[c]',
						# 'ATOA-MONOMER[c]',
						# 'ATOD-MONOMER[c]',
						# 'BETACOMP-MONOMER[c]',
						# 'DIHYDRONEOPTERIN-MONO-P-DEPHOS-MONOMER[c]',
						# 'DMK-MONOMER[i]',
						# 'EG10043-MONOMER[c]',
						# 'EG12438-MONOMER[c]',
						# 'EUTB-MONOMER[c]',
						# 'EUTC-MONOMER[c]',
						# 'FABB-MONOMER[c]',
						# 'FADA-MONOMER[c]',
						# 'FADB-MONOMER[c]',
						# 'FDNG-MONOMER[p]',
						# 'FDNH-MONOMER[i]',
						# 'FDNI-MONOMER[i]',
						# 'FOLC-MONOMER[c]',
						# 'FORMYLTHFDEFORMYL-MONOMER[c]',
						# 'G6208-MONOMER[c]',
						# 'G6277-MONOMER[c]',
						# 'G6551-MONOMER[c]',
						# 'G6912-MONOMER[c]',
						# 'G7212-MONOMER[c]',
						# 'G7236-MONOMER[c]',
						# 'GLUTATHIONE-SYN-MONOMER[c]',
						# 'GLUTCYSLIG-MONOMER[c]',
						# 'GLUTKIN-MONOMER[c]',
						# 'GLUTSEMIALDEHYDROG-MONOMER[c]',
						# 'GTP-CYCLOHYDRO-I-MONOMER[c]',
						# 'H2NEOPTERINALDOL-MONOMER[c]',
						# 'H2NEOPTERINP3PYROPHOSPHOHYDRO-MONOMER[c]',
						# 'H2PTERIDINEPYROPHOSPHOKIN-MONOMER[c]',
						# 'H2PTEROATESYNTH-MONOMER[c]',
						# 'HMP-P-KIN-MONOMER[c]',
						# 'MEND-MONOMER[c]',
						# 'NAPHTHOATE-SYN-MONOMER[c]',
						# 'NUCLEOSIDE-DIP-KIN-MONOMER[c]',
						# 'O-SUCCINYLBENZOATE-COA-LIG-MONOMER[c]',
						# 'O-SUCCINYLBENZOATE-COA-SYN-MONOMER[c]',
						# 'PABASYN-COMPII-MONOMER[c]',
						# 'PABASYN-COMPI-MONOMER[c]',
						# 'PAPSSULFOTRANS-MONOMER[c]',
						# 'PYRUFLAVREDUCT-MONOMER[c]',
						# 'THIC-MONOMER[c]',
						# 'THIE-MONOMER[c]',
						# 'THIF-MONOMER[c]',
						# 'THIG-MONOMER[c]',
						# 'THII-MONOMER[c]',
						# 'UGD-MONOMER[c]',

						# essential enzymes with low protein frequency over one cell-cycle
						# 'EG11372-MONOMER[c]',
						# 'DXPREDISOM-MONOMER[c]',
						# 'PANTEPADENYLYLTRAN-MONOMER[c]',
						# 'G7423-MONOMER[c]',
						# 'UDP-NACMUR-ALA-LIG-MONOMER[c]',
						# 'EG11081-MONOMER[c]',
						# 'GTP-CYCLOHYDRO-II-MONOMER[c]',
						# 'NRDA-MONOMER[c]',
						# 'LIPIDADISACCHARIDESYNTH-MONOMER[i]',
						# 'NRDB-MONOMER[c]',
						# 'DIOHBUTANONEPSYN-MONOMER[i]',
						# 'HISS-MONOMER[c]',
						# 'EG11294-MONOMER[c]',
						# 'RIBOFLAVINSYNDEAM-MONOMER[c]',
						# 'UPPSYN-MONOMER[c]',

						# 'EG11023-MONOMER[c]',
						# 'GUANYL-KIN-MONOMER[c]',
						# 'GLYC3PDEHYDROGBIOSYN-MONOMER[c]',
						# 'RIBOFLAVIN-SYN-MONOMER[c]',
						# 'EG11816-MONOMER[c]',
						# 'ASPS-MONOMER[c]',
						# 'METG-MONOMER[c]',
						# 'L-GLN-FRUCT-6-P-AMINOTRANS-MONOMER[c]',
						# 'PROS-MONOMER[c]',
						# 'TRPS-MONOMER[c]',
						# 'EG10613-MONOMER[i]',
						# 'GSAAMINOTRANS-MONOMER[c]',
						# 'TYRS-MONOMER[c]',
						# 'NAD-SYNTH-MONOMER[c]',
						# 'HOLO-ACP-SYNTH-MONOMER[c]',
						# 'FABB-MONOMER[c]',
						# 'SERS-MONOMER[c]',
						# 'BIOTIN-CARBOXYL-MONOMER[c]',
						# 'NAG1P-URIDYLTRANS-MONOMER[c]',
						# 'UDPHYDROXYMYRGLUCOSAMNACETYLTRANS-MONO[c]',
						# 'FOLD-MONOMER[c]',
						# 'OPPSYN-MONOMER[c]',
						# 'PROTOPORGENOXI-MONOMER[c]',
						# 'UDPNACETYLGLUCOSAMACYLTRANS-MONOMER[c]',

						# 'DUTP-PYROP-MONOMER[c]',
						# 'PHES-MONOMER[c]',
						# 'THRS-MONOMER[c]',
						# 'FABA-MONOMER[c]',
						# 'ASNS-MONOMER[c]',
						# 'CDPDIGLYSYN-MONOMER[i]',
						# 'KDO-8PSYNTH-MONOMER[c]',
						# 'CTPSYN-MONOMER[c]',
						# 'DIHYDROPICRED-MONOMER[c]',
						# 'DIHYDRODIPICSYN-MONOMER[c]',
						# 'DXS-MONOMER[c]',

						# 'UMPKI-MONOMER[c]',
						# 'MONOMER0-1981[c]',
						# '3-OXOACYL-ACP-REDUCT-MONOMER[c]',
						# 'ASP-SEMIALDEHYDE-DEHYDROGENASE-MONOMER[c]',
						# 'ASL-MONOMER[c]',
						# 'MONOMER0-2001[c]',
						# 'CYDC-MONOMER[i]',
						# 'FRUCTBISALD-CLASSII-MONOMER[c]',
						# 'S-ADENMETSYN-MONOMER[c]',
						# 'EG11396-MONOMER[i]',
						# 'FABZ-MONOMER[c]',
						# 'SPOT-MONOMER[c]',
						# 'ENOYL-ACP-REDUCT-NADH-MONOMER[c]',
						# 'EG12319-MONOMER[c]',
						# 'GTP-CYCLOHYDRO-I-MONOMER[c]',
						# 'ENOLASE-MONOMER[c]',
						# 'LUMAZINESYN-MONOMER[c]',
						# 'PSD-MONOMER[c]',
						# 'INORGPYROPHOSPHAT-MONOMER[c]',

						# non-essential enzymes with low protein frequency over one cell-cycle
						'FDNG-MONOMER[p]',
						'MONOMER0-12[i]',
						'ACPSUB-MONOMER[c]',
						'NIKB-MONOMER[i]',
						'G6711-MONOMER[c]',
						'EG12030-MONOMER[c]',
						'G7230-MONOMER[c]',
						'FORMATEDEHYDROGH-MONOMER[c]',
						'CARBODEHYDRAT-MONOMER[c]',
						'DMSA-MONOMER[i]',
						'G6140-MONOMER[c]',
						'GLYOCARBOLIG-MONOMER[c]',
						'MONOMER-162[c]',
						'RIBULPEPIM-MONOMER[c]',
						'TAGAALDOL1-MONOMER[c]',
						'G7234-MONOMER[c]',
						'RHAMNISOM-MONOMER[c]',
						'XYLISOM-MONOMER[c]',
						'YNJC-MONOMER[i]',
						'APPC-MONOMER[i]',
						'EG11865-MONOMER[c]',
						'G6281-MONOMER[c]',
						'G7237-MONOMER[c]',
						'HYCBSMALL-MONOMER[c]',
						'HYCC-MONOMER[i]',
						'OROPRIBTRANS-MONOMER[c]',
						'TTDB-MONOMER[c]',
						'MONOMER0-146[c]',
						'ATOD-MONOMER[c]',
						'MONOMER0-282[e]',
						'RIB5PISOMB-MONOMER[c]',
						'RIBULOKIN-MONOMER[c]',
						'KDGALDOL-MONOMER[c]',
						'PHNC-MONOMER[i]',
						'FUCISOM-MONOMER[c]',
						'ARAF-MONOMER[i]',
						'ARSF-MONOMER[i]',
						'EG11847-MONOMER[c]',
						'G6261-MONOMER[c]',
						'B1599-MONOMER[i]',
						'HYCELARGE-MONOMER[c]',
						'G6755-MONOMER[c]',
						'G6770-MONOMER[c]',
						'G7487-MONOMER[c]',
						'G7858-MONOMER[c]',
						'APPA-MONOMER[p]',
						'XYLULOKIN-MONOMER[c]',
						'ADCLY-MONOMER[c]',
						'LSERINEDEAM3-MONOMER[c]',
						'EG11568-MONOMER[i]',
						'PABASYN-COMPII-MONOMER[c]',
						'6PFK-2-MONOMER[c]',
						'FADA-MONOMER[c]',
						'GALACTOACETYLTRAN-MONOMER[c]',
						'METHYLMALONYL-COA-MUT-MONOMER[c]',
						'G7158-MONOMER[c]',
						'CHD-MONOMER[c]',
						'ORNDECARBOXDEG-MONOMER[c]',
						'ARABISOM-MONOMER[c]',
						'UGPE-MONOMER[i]',
						'SBMA-MONOMER[i]',
						'ALKAPHOSPHA-MONOMER[p]',
						'SIROHEMESYN-MONOMER[c]',
						'EG11692-MONOMER[c]',
						'MHPDHYDROL-MONOMER[c]',
						'GLUTDECARBOXA-MONOMER[c]',
						'SORB6PDEHYDROG-MONOMER[c]',
						'G7213-MONOMER[c]',
						'G6710-MONOMER[c]',
						'ACNEULY-MONOMER[c]',
						'G7544-MONOMER[c]',
						'G7263-MONOMER[c]',
						'RFFTRANS-MONOMER[c]',
						'UGD-MONOMER[c]',
						'PANTOTHENATE-KIN-MONOMER[c]',
						'YEJF-MONOMER[i]',
						'YLIC-MONOMER[i]',
						'G7456-MONOMER[c]',
						'GCVP-MONOMER[c]',
						'FDOI-MONOMER[i]',
						'POTG-MONOMER[i]',
						'G7888-MONOMER[i]',
						'DPPB-MONOMER[i]',
						'ARTM-MONOMER[i]',
						'CYDD-MONOMER[i]',
						'EG10564-MONOMER[c]',
						'PSTA-MONOMER[i]',
						'NUOI-MONOMER[i]',
						'CYDB-MONOMER[i]',
						'EG11735-MONOMER[c]',
						'MEND-MONOMER[c]',
						'DTDPDEHYDRHAMEPIM-MONOMER[c]',
						'EG10973-MONOMER[c]',
						'G7037-MONOMER[i]',
						'CYST-MONOMER[i]',
						'OROTPDECARB-MONOMER[c]',
						'G7406-MONOMER[i]',
						'PHOSPHASERSYN-MONOMER[i]',
						'FUMC-MONOMER[c]',
						'LIVH-MONOMER[i]',
						'EG10855-MONOMER[e]',
						'METI-MONOMER[i]',
						'FUMA-MONOMER[c]',
						'SDH-MEMB2[i]',
						'NHAA-MONOMER[i]',
						'GLNP-MONOMER[i]',
						'THIG-MONOMER[c]',
						'MENF-MONOMER[c]',
						'G6551-MONOMER[c]',
						'OPPB-MONOMER[i]',
						'G6810-MONOMER[c]',
						'ACONITASE-MONOMER[c]',
						'EG12298-MONOMER[p]',
						'MALTACETYLTRAN-MONOMER[c]',
						'GLUCONOKINII-MONOMER[c]',
						'ACYLCOASYN-MONOMER[i]',
						'LYSU-MONOMER[c]',
						'TRANSKETOII-MONOMER[c]',
						'POTB-MONOMER[i]',
						'H2PTEROATESYNTH-MONOMER[c]',
						'CYOD-MONOMER[i]',
						'EG11373-MONOMER[c]',
						'ATPH-MONOMER[i]',
						'GLTK-MONOMER[i]',
						'AROD-MONOMER[c]',
						'EG10572-MONOMER[c]',
						'EMRE-MONOMER[i]',
						'THREDEHYDSYN-MONOMER[c]',
						'BGLF-MONOMER[i]',
						'GLUTATHIONE-REDUCT-NADPH-MONOMER[c]',
						'G7596-MONOMER[c]',
						'7-ALPHA-HYDROXYSTEROID-DEH-MONOMER[c]',
						'ATPB-MONOMER[i]',
						'GLUSYNLARGE-MONOMER[c]',
						'EG11517-MONOMER[c]',
						'NAG6PDEACET-MONOMER[c]',
						'NUOK-MONOMER[i]',
						'DEOA-MONOMER[c]',
						'G7212-MONOMER[c]',
						'G7590-MONOMER[c]',
						'G6645-MONOMER[c]',
						'GSP-MONOMER[c]',
						'G6731-MONOMER[c]',
						'ASPARTASE-MONOMER[c]',
						'HISTPHOSTRANS-MONOMER[c]',
						'G7530-MONOMER[c]',
						'THREODEHYD-MONOMER[c]',
						'ASNSYNA-MONOMER[c]',
						'AGMATIN-MONOMER[c]',
						'HISM-MONOMER[i]',
						'ACETYLORNDEACET-MONOMER[c]',
						'PROP-MONOMER[i]',
						'PPPGPPHYDRO-MONOMER[c]',
						'UDPGLCNACEPIM-MONOMER[c]',
						'GSK-MONOMER[c]',
						'PYRUVOXID-MONOMER[i]',
						'MALDEXPHOSPHORYL-MONOMER[c]',
						'EG11371-MONOMER[i]',
						'DHHB-METHYLTRANSFER-MONOMER[i]',
						'EG10124-MONOMER[c]',
						'DGTPTRIPHYDRO-MONOMER[c]',

						'DLACTDEHYDROGNAD-MONOMER[c]',
						'G6811-MONOMER[c]',
						'7KAPSYN-MONOMER[c]',
						'QOR-MONOMER[c]',
						'TYRB-MONOMER[c]',
						'G7055-MONOMER[c]',
						'EG11723-MONOMER[c]',
						'LEUC-MONOMER[c]',
						'NRDE-MONOMER[c]',
						'ORNDECARBOX-BIO-MONOMER[c]',
						'CYTIDEAM-MONOMER[c]',
						'HISTDEHYD-MONOMER[c]',
						'DALADEHYDROGA-MONOMER[i]',
						'ASNSYNB-MONOMER[c]',
						'QUINOPRIBOTRANS-MONOMER[c]',
						'PURK-MONOMER[c]',
						'ADENYLYLSULFKIN-MONOMER[c]',
						'GLYS-MONOMER[c]',
						'G6627-MONOMER[c]',
						'ACRB-MONOMER[i]',
						'G7128-MONOMER[c]',
						'EG11298-MONOMER[c]',
						'NUOL-MONOMER[i]',
						'G7184-MONOMER[c]',
						'ACSERLYB-MONOMER[c]',
						'G6759-MONOMER[c]',
						'EG10695-MONOMER[c]',
						'BIOTIN-SYN-MONOMER[c]',
						'THYMIDYLATESYN-MONOMER[c]',
						'ACETYLGLUTKIN-MONOMER[c]',
						'G6906-MONOMER[c]',
						'ANTHRANSYNCOMPII-MONOMER[c]',
						'EG10395-MONOMER[c]',
						'PDXA-MONOMER[c]',
						'CHORISMUTPREPHENDEHYDRAT-MONOMER[c]',
						'UDPGLUCEPIM-MONOMER[c]',
						'3-OXOACYL-ACP-SYNTHII-MONOMER[c]',
						'PDXY-MONOMER[c]',
						'HMP-P-KIN-MONOMER[c]',
						'DAPASYN-MONOMER[c]',
						'O-SUCCHOMOSERLYASE-MONOMER[c]',
						'PNTB-MONOMER[i]',
						'HOMSUCTRAN-MONOMER[c]',
						'EG12410-MONOMER[c]',
						'MANX-MONOMER[i]',
						'G7564-MONOMER[c]',
						'HYDROPEROXIDI-MONOMER[c]',
						'YIIP-MONOMER[i]',
						'FABH-MONOMER[c]',
						'ASPKINIII-MONOMER[c]',
						'DCTP-DEAM-MONOMER[c]',
						'PANTOATE-BETA-ALANINE-LIG-MONOMER[c]',
						'SPERMIDINESYN-MONOMER[c]',
						'AROH-MONOMER[c]',
						'G7865-MONOMER[c]',
						'ENTE-MONOMER[i]',
						'PAPSSULFOTRANS-MONOMER[c]',
						'DTDPGLUCDEHYDRAT-MONOMER[c]',
						'G7454-MONOMER[c]',
						'NRDF-MONOMER[c]',
						'AROF-MONOMER[c]',
						'PTSG-MONOMER[i]',
						'EG12633-MONOMER[c]',
						'HOMOSERKIN-MONOMER[c]',
						'CARBPSYN-SMALL[c]',
						'CHORISMUTPREPHENDEHYDROG-MONOMER[c]',
						'ACETOLACTSYNIII-ICHAIN-MONOMER[c]',
						'CHAINF-MONOMER[c]',
						'G7579-MONOMER[c]',
						'DIHYDROXYACIDDEHYDRAT-MONOMER[c]',
						'THIOREDOXIN-REDUCT-NADPH-MONOMER[c]',
						'QUINOLINATE-SYNTHA-MONOMER[c]',
						'DIAMINOPIMEPIM-MONOMER[c]',
						'IMIDPHOSPHADEHYDHISTIDPHOSPHA-MONOMER[c]',
						'3-ISOPROPYLMALDEHYDROG-MONOMER[c]',
						'LYSS-MONOMER[c]',
						'GLPF-MONOMER[i]',
						'MONOMER-43[i]',
						'ADHC-MONOMER[c]',
						'G7405-MONOMER[i]',
						'G7662-MONOMER[c]',
						'TRYPSYN-BPROTEIN[c]',
						'EG12600-MONOMER[c]',
						'GMP-SYN-MONOMER[c]',
						'HYDROPEROXIDII-MONOMER[c]',
						'DCYSDESULF-MONOMER[c]',
						'ATPF-MONOMER[i]',
						'ACONITATEDEHYDRB-MONOMER[c]',
						'TRANSKETOI-MONOMER[c]',
						'HISP-MONOMER[i]',
						'KDPGALDOL-4OH2OXOGLUTARALDOL-MONOMER[c]',
						'DIACYLGLYKIN-MONOMER[i]',
						'G7325-MONOMER[c]',
						'ADENPRIBOSYLTRAN-MONOMER[c]',
						'GLUTATHIONE-SYN-MONOMER[c]',
						'EG11090-MONOMER[c]',
						'GPT-MONOMER[i]',
						'PGLUCISOM[c]',
						'AIRS-MONOMER[c]',
						'CHAINI-MONOMER[c]',
						'PD01343[c]',
						'RIB5PISOMA-MONOMER[c]',
						'PDXH-MONOMER[c]',
						'G6912-MONOMER[c]',
						'ATPPHOSRIBOSTRANS-MONOMER[c]',
						'SUCCCOASYN-BETA[c]',
						'EG10838-MONOMER[c]',
						'DALADALALIGB-MONOMER[c]',
						'AROC-MONOMER[c]',
						'F16B-MONOMER[c]',
						'ACETYLORNTRANSAM-MONOMER[c]',
						'GLTJ-MONOMER[i]',
						'LTAA-MONOMER[c]',
						'G7409-MONOMER[c]',
						'GLUTSEMIALDEHYDROG-MONOMER[c]',
						'CYSN-MONOMER[c]',
						'HISQ-MONOMER[i]',
						'G7663-MONOMER[c]',
						'E3-MONOMER[i]',
						'NADH-DHII-MONOMER[c]',
						'ASPKINIIHOMOSERDEHYDROGII-MONOMER[c]',
						'6PGLUCONDEHYDROG-MONOMER[c]',
						'PEPSYNTH-MONOMER[c]',
						'GLUTKIN-MONOMER[c]',
						'DIHYDROOROT-MONOMER[c]',
						'PKII-MONOMER[c]',
						'6PFK-1-MONOMER[c]',
						'AERGLYC3PDEHYDROG-MONOMER[i]',
						'GMP-REDUCT-MONOMER[c]',
						'SAICARSYN-MONOMER[c]',
						'PRPPAMIDOTRANS-MONOMER[c]',
						'GLYOXI-MONOMER[c]',
						'GLUC1PADENYLTRANS-MONOMER[c]',
						'GLUTAMIDOTRANS-MONOMER[c]',
						'E1P-MONOMER[c]',
						'EG12656-MONOMER[c]',
						'ADENYLOSUCCINATE-SYN-MONOMER[c]',
						'CYSTATHIONINE-BETA-LYASE-MONOMER[c]',
						'METHYLENETHFREDUCT-MONOMER[c]',
						'ERYTH4PDEHYDROG-MONOMER[c]',
						'G7185-MONOMER[c]',
						'POTC-MONOMER[i]',
						'PHOSACETYLTRANS-MONOMER[c]',
						'EG11009-MONOMER[e]',
						'URACIL-PRIBOSYLTRANS-MONOMER[c]',
						'LACTALDDEHYDROG-MONOMER[c]',
						'ATPD-MONOMER[i]',
						'METHGLYSYN-MONOMER[c]',
						'EG11663-MONOMER[c]',
						'G6106-MONOMER[c]',
						'EG12345-MONOMER[c]',
						'HYPOXANPRIBOSYLTRAN-MONOMER[c]',
						'ASPAMINOTRANS-MONOMER[c]',
						'ASPKINIHOMOSERDEHYDROGI-MONOMER[c]',
						'EG11591-MONOMER[c]',
						'DIAMINOPIMDECARB-MONOMER[c]',
						'PSERTRANSAM-MONOMER[c]',
						'GABATRANSAM-MONOMER[c]',
						'ANSA-MONOMER[c]',
						'ATPA-MONOMER[i]',
						'EG10694-MONOMER[c]',
						'EG11315-MONOMER[c]',
						'EG11703-MONOMER[i]',
						'EG12026-MONOMER[c]',
						'THIOESTERI-MONOMER[p]',
						'PEPCARBOX-MONOMER[c]',
						'DTDPGLUCOSEPP-MONOMER[c]',
						'CYTDEAM-MONOMER[c]',
						'ARGSUCCINSYN-MONOMER[c]',
						'TPI-MONOMER[c]',
						'EG11306-MONOMER[c]',
						'PDXK-MONOMER[c]',

						# 'E1O-MONOMER[c]',
						# 'ENTA-MONOMER[c]',
						# 'EG12310-MONOMER[c]',
						# 'DEOD-MONOMER[c]',
						# 'FADB-MONOMER[c]',
						# 'ALARACEBIOSYN-MONOMER[c]',
						# 'UDHA-MONOMER[c]',
						# 'DETHIOBIOTIN-SYN-MONOMER[c]',
						# 'NUCLEOSIDE-DIP-KIN-MONOMER[c]',
						# 'E2P-MONOMER[c]',
						# 'IMP-DEHYDROG-MONOMER[c]',
						# 'SERINE-O-ACETTRAN-MONOMER[c]',
						# 'G7242-MONOMER[c]',
						# 'AMP-NUCLEOSID-MONOMER[c]',
						# 'PROW-MONOMER[i]',
						# 'FRUCBISALD-CLASSI-MONOMER[c]',
						# 'BRANCHED-CHAINAMINOTRANSFER-MONOMER[c]',
						# 'COPROGENOXI-MONOMER[c]',
						# 'AROG-MONOMER[c]',
						# 'G6662-MONOMER[c]',
						# 'GLYCEROL-KIN-MONOMER[c]',
						# 'MONOMER0-541[c]',
						# 'SPERMACTRAN-MONOMER[c]',
						# 'PGLYCEROLTRANSI-MONOMER[i]',
						# 'PURE-MONOMER[c]',
						# 'URPHOS-MONOMER[c]',
						# 'N-ACETYLTRANSFER-MONOMER[c]',
						# 'MALIC-NAD-MONOMER[c]',
						# 'LDC2-MONOMER[c]',
						# 'FORMYLTHFDEFORMYL-MONOMER[c]',
						# 'PDXJ-MONOMER[c]',
						# 'GLUTDECARBOXB-MONOMER[c]',
						# 'PORPHOBILSYNTH-MONOMER[c]',
						# 'TRANSALDOLB-MONOMER[c]',
						# 'OPPC-MONOMER[i]',
						# 'EUTC-MONOMER[c]',
						# '3-CH3-2-OXOBUTANOATE-OH-CH3-XFER-MONOMER[c]',
						# 'FOCA-MONOMER[i]',
						# 'SUCCSEMIALDDEHYDROG-MONOMER[c]',
						# 'O-SUCCINYLBENZOATE-COA-LIG-MONOMER[c]',
						# 'MALATE-DEHASE-MONOMER[c]',
						# 'G6644-MONOMER[c]',
						# 'GDHA-MONOMER[c]',
						# 'PGLYCDEHYDROG-MONOMER[c]',
						# 'H2NTPEPIM-MONOMER[c]',
						# 'GLYOHMETRANS-MONOMER[c]',
						# 'UGPC-MONOMER[i]',
						# 'NAPHTHOATE-SYN-MONOMER[c]',
						# 'EG10004-MONOMER[c]',
						# 'ACSERLYA-MONOMER[c]',
						# 'EG10355-MONOMER[c]',
						# 'CITSYN-MONOMER[c]',
						# 'GLYCPDIESTER-PERI-MONOMER[p]',
						# 'BADH-MONOMER[c]',
						# 'GLUTAMINESYN-MONOMER[c]',
						# 'ASPCARBCAT-MONOMER[c]',
						# 'ALPHACOMP-MONOMER[c]',
						# 'PYRROLINECARBREDUCT-MONOMER[c]',
						# 'AMTB-MONOMER[i]',
						# 'G7168-MONOMER[c]',
						# 'LIVM-MONOMER[i]',
						# 'MALIC-NADP-MONOMER[c]',
						# 'TRYPTOPHAN-MONOMER[c]',
						# 'EG10817-MONOMER[c]',
						# 'PKI-MONOMER[c]',
						# 'ADHE-MONOMER[c]',
						# 'E2O-MONOMER[c]',
						# 'EG10671-MONOMER[e]',
						# 'ISOCITDEH-SUBUNIT[c]',
						# 'EG10670-MONOMER[e]',
						# 'YADQ-MONOMER[i]',
						# 'H2NEOPTERINALDOL-MONOMER[c]',
						# 'ATPE-MONOMER[i]',
						# 'KETOLREDUCTOISOM-MONOMER[c]',
						# 'GPMA-MONOMER[c]',
						# 'ZNUB-MONOMER[i]',
						# 'G6804-MONOMER[c]',

						# all (enzymatic and non-enzymatic) complexes with subunits above
						'2OXOGLUTARATEDEH-CPLX[i]',
						'3-ISOPROPYLMALDEHYDROG-CPLX[c]',
						'3-ISOPROPYLMALISOM-CPLX[c]',
						'3-METHYL-2-OXOBUT-OHCH3XFER-CPLX[c]',
						'3-OXOACYL-ACP-SYNTHII-CPLX[c]',
						'6PFK-1-CPX[c]',
						'6PFK-2-CPX[c]',
						'6PGLUCONDEHYDROG-CPLX[c]',
						'7-ALPHA-HYDROXYSTEROID-DEH-CPLX[c]',
						'7KAPSYN-CPLX[c]',
						'ABC-12-CPLX[i]',
						'ABC-13-CPLX[i]',
						'ABC-14-CPLX[i]',
						'ABC-15-CPLX[i]',
						'ABC-2-CPLX[i]',
						'ABC-20-CPLX[i]',
						'ABC-22-CPLX[i]',
						'ABC-23-CPLX[i]',
						'ABC-24-CPLX[i]',
						'ABC-25-CPLX[i]',
						'ABC-26-CPLX[i]',
						'ABC-27-CPLX[i]',
						'ABC-3-CPLX[i]',
						'ABC-304-CPLX[i]',
						'ABC-34-CPLX[i]',
						'ABC-4-CPLX[i]',
						'ABC-41-CPLX[i]',
						'ABC-48-CPLX[i]',
						'ABC-49-CPLX[i]',
						'ABC-53-CPLX[i]',
						'ABC-6-CPLX[i]',
						'ABC-63-CPLX[i]',
						'ABC-7-CPLX[i]',
						'ABC-70-CPLX[i]',
						'ABC-8-CPLX[i]',
						'ACETOACETYL-COA-TRANSFER-CPLX[c]',
						'ACETOLACTSYNIII-CPLX[c]',
						'ACETYLGLUTKIN-CPLX[c]',
						'ACETYLORNDEACET-CPLX[c]',
						'ACETYLORNTRANSAM-CPLX[c]',
						'ACNEULY-CPLX[c]',
						'ACPSUB-CPLX[c]',
						'ACSERLYA-CPLX[c]',
						'ACSERLYB-CPLX[c]',
						'ACYLCOASYN-CPLX[i]',
						'ADCLY-CPLX[c]',
						'ADENPRIBOSYLTRAN-CPLX[c]',
						'ADENYLOSUCCINATE-SYN-DIMER[c]',
						'ADENYLYLSULFKIN-CPLX[c]',
						'ADHC-CPLX[c]',
						'ADHE-CPLX[c]',
						'AERGLYC3PDEHYDROG-CPLX[i]',
						'AGMATIN-CPLX[c]',
						'AIRS-CPLX[c]',
						'ALD-CPLX[c]',
						'ALKAPHOSPHA-CPLX[p]',
						'ALPHA-SUBUNIT-CPLX[i]',
						'AMP-NUCLEOSID-CPLX[c]',
						'ANSA-CPLX[c]',
						'ANTHRANSYN-CPLX[c]',
						'APP-UBIOX-CPLX[i]',
						'ARABISOM-CPLX[c]',
						'AROC-CPLX[c]',
						'AROD-CPLX[c]',
						'AROF-CPLX[c]',
						'AROG-CPLX[c]',
						'AROH-CPLX[c]',
						'ASNS-CPLX[c]',
						'ASNSYNA-CPLX[c]',
						'ASNSYNB-CPLX[c]',
						'ASP-SEMIALDEHYDE-DEHYDROGENASE-CPLX[c]',
						'ASPAMINOTRANS-DIMER[c]',
						'ASPARTASE-CPLX[c]',
						'ASPCARBCAT-TRIMER[c]',
						'ASPCARBTRANS-CPLX[c]',
						'ASPKINIHOMOSERDEHYDROGI-CPLX[c]',
						'ASPKINIIHOMOSERDEHYDROGII-CPLX[c]',
						'ASPKINIII-CPLX[c]',
						'ASPS-CPLX[c]',
						'ATOD-CPLX[c]',
						'ATPA-CPLX[i]',
						'ATPASE-1-CPLX[i]',
						'ATPD-CPLX[i]',
						'ATPE-CPLX[i]',
						'ATPF-CPLX[i]',
						'ATPSYN-CPLX[i]',
						'B1-CPLX[c]',
						'B2-CPLX[c]',
						'BADH-CPLX[c]',
						'BIOTIN-CARBOXYL-CPLX[c]',
						'BIOTIN-SYN-CPLX[c]',
						'BRANCHED-CHAINAMINOTRANSFER-CPLX[c]',
						'CARBODEHYDRAT-CPLX[c]',
						'CARBPSYN-CPLX[c]',
						'CHORISMUTPREPHENDEHYDRAT-CPLX[c]',
						'CHORISMUTPREPHENDEHYDROG-CPLX[c]',
						'CITLY-CPLX[c]',
						'CITRATE-SI-SYNTHASE[c]',
						'COADTRI-CPLX[c]',
						'CPLX-154[i]',
						'CPLX-157[i]',
						'CPLX-165[i]',
						'CPLX-64[c]',
						'CPLX-722[p]',
						'CPLX-7[i]',
						'CPLX-8029[c]',
						'CPLX0-1142[c]',
						'CPLX0-1261[c]',
						'CPLX0-1262[c]',
						'CPLX0-1541[c]',
						'CPLX0-1666[c]',
						'CPLX0-1667[c]',
						'CPLX0-1668[c]',
						'CPLX0-1683[c]',
						'CPLX0-1762[c]',
						'CPLX0-1962[c]',
						'CPLX0-2081[c]',
						'CPLX0-2121[s]',
						'CPLX0-2141[s]',
						'CPLX0-2161[s]',
						'CPLX0-2221[e]',
						'CPLX0-224[c]',
						'CPLX0-225[c]',
						'CPLX0-234[c]',
						'CPLX0-235[i]',
						'CPLX0-236[c]',
						'CPLX0-237[c]',
						'CPLX0-2381[s]',
						'CPLX0-238[c]',
						'CPLX0-2401[c]',
						'CPLX0-240[c]',
						'CPLX0-241[c]',
						'CPLX0-242[c]',
						'CPLX0-243[c]',
						'CPLX0-246[c]',
						'CPLX0-248[c]',
						'CPLX0-252[c]',
						'CPLX0-253[c]',
						'CPLX0-3001[c]',
						'CPLX0-301[i]',
						'CPLX0-303[c]',
						'CPLX0-3061[c]',
						'CPLX0-3121[c]',
						'CPLX0-3161[c]',
						'CPLX0-3181[c]',
						'CPLX0-321[c]',
						'CPLX0-322[c]',
						'CPLX0-3361[i]',
						'CPLX0-341[c]',
						'CPLX0-3641[c]',
						'CPLX0-3661[c]',
						'CPLX0-3681[c]',
						'CPLX0-3721[c]',
						'CPLX0-3841[c]',
						'CPLX0-3924[c]',
						'CPLX0-3929[c]',
						'CPLX0-3932[s]',
						'CPLX0-3936[c]',
						'CPLX0-3943[c]',
						'CPLX0-3948[c]',
						'CPLX0-3949[c]',
						'CPLX0-3950[c]',
						'CPLX0-3952[c]',
						'CPLX0-3954[c]',
						'CPLX0-3970[i]',
						'CPLX0-3971[c]',
						'CPLX0-5[s]',
						'CPLX0-682[c]',
						'CPLX0-721[c]',
						'CPLX0-7415[i]',
						'CPLX0-7426[c]',
						'CPLX0-743[c]',
						'CPLX0-7458[i]',
						'CPLX0-7466[c]',
						'CPLX0-7521[c]',
						'CPLX0-7525[c]',
						'CPLX0-7530[e]',
						'CPLX0-7532[i]',
						'CPLX0-7533[e]',
						'CPLX0-7534[e]',
						'CPLX0-7536[c]',
						'CPLX0-7564[c]',
						'CPLX0-7614[c]',
						'CPLX0-7615[c]',
						'CPLX0-761[c]',
						'CPLX0-7622[c]',
						'CPLX0-7625[c]',
						'CPLX0-7628[e]',
						'CPLX0-7629[i]',
						'CPLX0-7630[p]',
						'CPLX0-7631[c]',
						'CPLX0-7632[c]',
						'CPLX0-7641[i]',
						'CPLX0-7642[i]',
						'CPLX0-7643[c]',
						'CPLX0-7644[i]',
						'CPLX0-7645[c]',
						'CPLX0-7646[c]',
						'CPLX0-7649[c]',
						'CPLX0-7652[c]',
						'CPLX0-7654[i]',
						'CPLX0-7659[c]',
						'CPLX0-7660[c]',
						'CPLX0-7667[c]',
						'CPLX0-7684[i]',
						'CPLX0-7685[c]',
						'CPLX0-7687[c]',
						'CPLX0-7688[c]',
						'CPLX0-7692[c]',
						'CPLX0-7693[c]',
						'CPLX0-7694[c]',
						'CPLX0-7695[c]',
						'CPLX0-7704[i]',
						'CPLX0-7709[c]',
						'CPLX0-7718[c]',
						'CPLX0-7719[c]',
						'CPLX0-7723[c]',
						'CPLX0-7732[c]',
						'CPLX0-7741[c]',
						'CPLX0-7744[c]',
						'CPLX0-7760[c]',
						'CPLX0-7761[c]',
						'CPLX0-7794[c]',
						'CPLX0-7808[c]',
						'CPLX0-7810[c]',
						'CPLX0-7811[c]',
						'CPLX0-7820[c]',
						'CPLX0-7826[c]',
						'CPLX0-782[c]',
						'CPLX0-7838[c]',
						'CPLX0-7841[c]',
						'CPLX0-7843[i]',
						'CPLX0-7847[c]',
						'CPLX0-7877[c]',
						'CPLX0-7882[c]',
						'CPLX0-7887[c]',
						'CPLX0-7888[c]',
						'CPLX0-7904[c]',
						'CPLX0-7921[i]',
						'CPLX0-7932[c]',
						'CPLX0-7939[i]',
						'CPLX0-7940[c]',
						'CPLX0-7951[c]',
						'CPLX0-7959[c]',
						'CPLX0-7961[i]',
						'CPLX0-7962[c]',
						'CPLX0-7963[i]',
						'CPLX0-7964[e]',
						'CPLX0-7989[c]',
						'CPLX0-7990[c]',
						'CPLX0-7992[s]',
						'CPLX0-7997[c]',
						'CPLX0-8005[c]',
						'CPLX0-8006[c]',
						'CPLX0-8008[c]',
						'CPLX0-8014[c]',
						'CPLX0-8016[c]',
						'CPLX0-8031[c]',
						'CPLX0-8032[c]',
						'CPLX0-8034[c]',
						'CPLX0-8092[c]',
						'CPLX0-8097[i]',
						'CPLX0-8098[c]',
						'CPLX0-8106[c]',
						'CPLX0-8120[i]',
						'CPLX0-8121[c]',
						'CPLX0-8122[c]',
						'CPLX0-8128[c]',
						'CPLX0-8152[i]',
						'CPLX0-8158[c]',
						'CPLX0-8159[c]',
						'CPLX0-8160[i]',
						'CPLX0-8176[c]',
						'CPLX0-8202[c]',
						'CPLX0-861[c]',
						'CPLX0-901[c]',
						'CPLXECOLI-7943[c]',
						'CTPSYN-CPLX[c]',
						'CYSSYNMULTI-CPLX[c]',
						'CYSTATHIONINE-BETA-LYASE-CPLX[c]',
						'CYT-D-UBIOX-CPLX[i]',
						'CYT-O-UBIOX-CPLX[i]',
						'CYTIDEAM-CPLX[c]',
						'DALADALALIGB-CPLX[c]',
						'DALADEHYDROG-CPLX[i]',
						'DAPASYN-CPLX[c]',
						'DCTP-DEAM-CPLX[c]',
						'DCYSDESULF-CPLX[c]',
						'DEOA-CPLX[c]',
						'DEOD-CPLX[c]',
						'DETHIOBIOTIN-SYN-CPLX[c]',
						'DGTPTRIPHYDRO-CPLX[c]',
						'DHHB-METHYLTRANSFER-CPLX[i]',
						'DIACYLGLYKIN-CPLX[i]',
						'DIAMINOPIMDECARB-CPLX[c]',
						'DIHYDRODIPICSYN-CPLX[c]',
						'DIHYDROOROT-CPLX[c]',
						'DIHYDROPICRED-CPLX[c]',
						'DIHYDROXYACIDDEHYDRAT-CPLX[c]',
						'DIMESULFREDUCT-CPLX[i]',
						'DIOHBUTANONEPSYN-CPLX[i]',
						'DTDPGLUCDEHYDRAT-CPLX[c]',
						'DTDPRHAMSYNTHMULTI-CPLX[c]',
						'DUTP-PYROP-CPLX[c]',
						'DXPREDISOM-CPLX[c]',
						'E1O[c]',
						'E1P-CPLX[c]',
						'E2O[c]',
						'E3-CPLX[i]',
						'ENOLASE-CPLX[c]',
						'ENTA-CPLX[c]',
						'ENTE-CPLX[i]',
						'ERYTH4PDEHYDROG-CPLX[c]',
						'ETHAMLY-CPLX[c]',
						'F-1-CPLX[i]',
						'F-O-CPLX[i]',
						'F16B-CPLX[c]',
						'FABA-CPLX[c]',
						'FABB-CPLX[c]',
						'FABZ-CPLX[c]',
						'FADA-CPLX[c]',
						'FADB-CPLX[c]',
						'FAO-CPLX[c]',
						'FHLMULTI-CPLX[i]',
						'FOLD-CPLX[c]',
						'FOLE-CPLX[c]',
						'FOLXTET-CPLX[c]',
						'FORMATEDEHYDROGN-CPLX[i]',
						'FORMATEDEHYDROGO-CPLX[i]',
						'FORMYLTHFDEFORMYL-CPLX[c]',
						'FRUCBISALD-CLASSII[c]',
						'FRUCBISALD-CLASSI[c]',
						'FUMARASE-A[c]',
						'FUMARASE-C[c]',
						'GABATRANSAM-CPLX[c]',
						'GALACTOACETYLTRAN-CPLX[c]',
						'GCVP-CPLX[c]',
						'GDHA-CPLX[c]',
						'GLUC1PADENYLTRANS-CPLX[c]',
						'GLUCONOKINII-CPLX[c]',
						'GLUTAMATESYN-CPLX[c]',
						'GLUTAMATESYN-DIMER[c]',
						'GLUTAMIDOTRANS-CPLX[c]',
						'GLUTAMINESYN-OLIGOMER[c]',
						'GLUTATHIONE-REDUCT-NADPH-CPLX[c]',
						'GLUTATHIONE-SYN-CPLX[c]',
						'GLUTDECARBOXA-CPLX[c]',
						'GLUTDECARBOXB-CPLX[c]',
						'GLUTKIN-CPLX[c]',
						'GLUTSEMIALDEHYDROG-CPLX[c]',
						'GLYC3PDEHYDROGBIOSYN-CPLX[c]',
						'GLYCEROL-KIN-CPLX[c]',
						'GLYCPDIESTER-PERI-CPLX[p]',
						'GLYOCARBOLIG-CPLX[c]',
						'GLYOHMETRANS-CPLX[c]',
						'GLYOXI-CPLX[c]',
						'GLYS-CPLX[c]',
						'GMP-REDUCT-CPLX[c]',
						'GMP-SYN-CPLX[c]',
						'GPT-CPLX[i]',
						'GSAAMINOTRANS-CPLX[c]',
						'GSP-CPLX[c]',
						'GTP-CYCLOHYDRO-II-CPLX[c]',
						'GUANYL-KIN-CPLX[c]',
						'H2PTEROATESYNTH-CPLX[c]',
						'HISS-CPLX[c]',
						'HISTDEHYD-CPLX[c]',
						'HISTPHOSTRANS-CPLX[c]',
						'HMP-P-KIN-CPLX[c]',
						'HOLO-ACP-SYNTH-CPLX[c]',
						'HOMOSERKIN-CPLX[c]',
						'HOMSUCTRAN-CPLX[c]',
						'HYDROG3-CPLX[i]',
						'HYDROPEROXIDI-CPLX[c]',
						'HYDROPEROXIDII-CPLX[c]',
						'IMIDHISTID-CPLX[c]',
						'IMP-DEHYDROG-CPLX[c]',
						'ISOCITHASE-CPLX[c]',
						'KDO-8PPHOSPHAT-CPLX[c]',
						'KDO-8PSYNTH-CPLX[c]',
						'KDPGALDOL-4OH2OXOGLUTARALDOL-CPLX[c]',
						'L-GLN-FRUCT-6-P-AMINOTRANS-CPLX[c]',
						'LDC2-CPLX[c]',
						'LTAA-CPLX[c]',
						'LTARTDEHYDRA-CPLX[c]',
						'LUMAZINESYN-CPLX[c]',
						'LYSS-CPLX[c]',
						'LYSU-CPLX[c]',
						'MALATE-DEHASE[c]',
						'MALDEXPHOSPHORYL-CPLX[c]',
						'MALIC-NAD-CPLX[c]',
						'MALIC-NADP-CPLX[c]',
						'MALTACETYLTRAN-CPLX[c]',
						'MENE-CPLX[c]',
						'MENF-CPLX[c]',
						'METG-CPLX[c]',
						'METHGLYSYN-CPLX[c]',
						'METHYLENETHFREDUCT-CPLX[c]',
						'METNIQ-METHIONINE-ABC-CPLX[i]',
						'N-ACETYLTRANSFER-CPLX[c]',
						'NAD-SYNTH-CPLX[c]',
						'NADH-DHI-CPLX[i]',
						'NAG1P-URIDYLTRANS-CPLX[c]',
						'NAG6PDEACET-CPLX[c]',
						'NRDE-CPLX[c]',
						'NRDF-CPLX[c]',
						'NUCLEOSIDE-DIP-KIN-CPLX[c]',
						'O-SUCCHOMOSERLYASE-CPLX[c]',
						'ORNCARBAMTRANSFERF-CPLX[c]',
						'ORNCARBAMTRANSFERI-CPLX[c]',
						'ORNDECARBOX-BIO-CPLX[c]',
						'ORNDECARBOXDEG-CPLX[c]',
						'OROPRIBTRANS-CPLX[c]',
						'OROTPDECARB-CPLX[c]',
						'PABASYN-CPLX[c]',
						'PABSYNMULTI-CPLX[c]',
						'PANTOATE-BETA-ALANINE-LIG-CPLX[c]',
						'PANTOTHENATE-KIN-CPLX[c]',
						'PAPSSULFOTRANS-CPLX[c]',
						'PDXH-CPLX[c]',
						'PDXK-CPLX[c]',
						'PEPCARBOX-CPLX[c]',
						'PEPSYNTH-CPLX[c]',
						'PGLYCDEHYDROG-CPLX[c]',
						'PHES-CPLX[c]',
						'PHOSACETYLTRANS-CPLX[c]',
						'PHOSGLYCMUTASE[c]',
						'PHOSPHASERSYN-CPLX[i]',
						'PKI-COMPLEX[c]',
						'PKII-CPLX[c]',
						'PORPHOBILSYNTH-CPLX[c]',
						'PPPGPPHYDRO-CPLX[c]',
						'PROLINEMULTI-CPLX[c]',
						'PROS-CPLX[c]',
						'PRPPAMIDOTRANS-CPLX[c]',
						'PSERTRANSAM-CPLX[c]',
						'PURE-CPLX[c]',
						'PURK-CPLX[c]',
						'PYRNUTRANSHYDROGEN-CPLX[i]',
						'PYRROLINECARBREDUCT-CPLX[c]',
						'PYRUVATEDEH-CPLX[i]',
						'PYRUVOXID-CPLX[i]',
						'QOR-CPLX[c]',
						'QUINOPRIBOTRANS-CPLX[c]',
						'RIB5PISOMA-CPLX[c]',
						'RIB5PISOMB-CPLX[c]',
						'RIBONUCLEOSIDE-DIP-REDUCTI-CPLX[c]',
						'RIBONUCLEOSIDE-DIP-REDUCTII-CPLX[c]',
						'RIBULOKIN-CPLX[c]',
						'RIBULPEPIM-CPLX[c]',
						'S-ADENMETSYN-CPLX[c]',
						'SAICARSYN-CPLX[c]',
						'SERS-CPLX[c]',
						'SIROHEMESYN-CPLX[c]',
						'SORB6PDEHYDROG-CPLX[c]',
						'SPERMACTRAN-CPLX[c]',
						'SPERMIDINESYN-CPLX[c]',
						'SUCC-DEHASE[i]',
						'SUCCCOASYN[c]',
						'SULFATE-ADENYLYLTRANS-CPLX[c]',
						'SULFITE-REDUCT-CPLX[c]',
						'THIOREDOXIN-REDUCT-NADPH-CPLX[c]',
						'THREDEHYDSYN-CPLX[c]',
						'THREODEHYD-CPLX[c]',
						'THRS-CPLX[c]',
						'THYMIDYLATESYN-CPLX[c]',
						'TPI[c]',
						'TRANS-200-CPLX[s]',
						'TRANS-CPLX-201[s]',
						'TRANS-CPLX-202[s]',
						'TRANS-CPLX-204[s]',
						'TRANSALDOLB-CPLX[c]',
						'TRANSKETOI-CPLX[c]',
						'TRPS-CPLX[c]',
						'TRYPSYN[c]',
						'TRYPTOPHAN-CPLX[c]',
						'TTDB-CPLX[c]',
						'TYRB-DIMER[c]',
						'TYRS-CPLX[c]',
						'UDHA-CPLX[c]',
						'UDPGLUCEPIM-CPLX[c]',
						'UDPNACETYLGLUCOSAMACYLTRANS-CPLX[c]',
						'UMPKI-CPLX[c]',
						'UPPSYN-CPLX[c]',
						'URACIL-PRIBOSYLTRANS-CPLX[c]',
						'URPHOS-CPLX[c]',
						'XYLISOM-CPLX[c]',
						'YDGEF-CPLX[i]',

						# all metabolic enzymes
						# 'FDNG-MONOMER[p]',
						# 'MONOMER0-12[i]',
						# 'ACPSUB-MONOMER[c]',
						# 'NIKB-MONOMER[i]',
						# 'G6711-MONOMER[c]',
						# 'EG12030-MONOMER[c]',
						# 'G7230-MONOMER[c]',
						# 'FORMATEDEHYDROGH-MONOMER[c]',
						# 'CARBODEHYDRAT-MONOMER[c]',
						# 'DMSA-MONOMER[i]',
						# 'G6140-MONOMER[c]',
						# 'GLYOCARBOLIG-MONOMER[c]',
						# 'MONOMER-162[c]',
						# 'RIBULPEPIM-MONOMER[c]',
						# 'TAGAALDOL1-MONOMER[c]',
						# 'G7234-MONOMER[c]',
						# 'RHAMNISOM-MONOMER[c]',
						# 'XYLISOM-MONOMER[c]',
						# 'YNJC-MONOMER[i]',
						# 'APPC-MONOMER[i]',
						# 'EG11865-MONOMER[c]',
						# 'G6281-MONOMER[c]',
						# 'G7237-MONOMER[c]',
						# 'HYCBSMALL-MONOMER[c]',
						# 'HYCC-MONOMER[i]',
						# 'OROPRIBTRANS-MONOMER[c]',
						# 'TTDB-MONOMER[c]',
						# 'G7263-MONOMER[c]',
						# 'MONOMER0-146[c]',
						# 'ATOD-MONOMER[c]',
						# 'MONOMER0-282[e]',
						# 'RIB5PISOMB-MONOMER[c]',
						# 'RIBULOKIN-MONOMER[c]',
						# 'KDGALDOL-MONOMER[c]',
						# 'PHNC-MONOMER[i]',
						# 'FUCISOM-MONOMER[c]',
						# 'ARAF-MONOMER[i]',
						# 'ARSF-MONOMER[i]',
						# 'EG11847-MONOMER[c]',
						# 'G6261-MONOMER[c]',
						# 'B1599-MONOMER[i]',
						# 'HYCELARGE-MONOMER[c]',
						# 'G6755-MONOMER[c]',
						# 'G6770-MONOMER[c]',
						# 'G7487-MONOMER[c]',
						# 'G7858-MONOMER[c]',
						# 'APPA-MONOMER[p]',
						# 'G7544-MONOMER[c]',
						# 'XYLULOKIN-MONOMER[c]',
						# 'ADCLY-MONOMER[c]',
						# 'LSERINEDEAM3-MONOMER[c]',
						# 'EG11568-MONOMER[i]',
						# 'PABASYN-COMPII-MONOMER[c]',
						# '6PFK-2-MONOMER[c]',
						# 'FADA-MONOMER[c]',
						# 'RFFTRANS-MONOMER[c]',
						# 'UGD-MONOMER[c]',
						# 'PANTOTHENATE-KIN-MONOMER[c]',
						# 'YEJF-MONOMER[i]',
						# 'YLIC-MONOMER[i]',
						# 'G7456-MONOMER[c]',
						# 'GCVP-MONOMER[c]',
						# 'FDOI-MONOMER[i]',
						# 'POTG-MONOMER[i]',
						# 'G7888-MONOMER[i]',
						# 'DPPB-MONOMER[i]',
						# 'ARTM-MONOMER[i]',
						# 'CYDD-MONOMER[i]',
						# 'EG10564-MONOMER[c]',
						# 'GALACTOACETYLTRAN-MONOMER[c]',
						# 'EG11372-MONOMER[c]',
						# 'PSTA-MONOMER[i]',
						# 'NUOI-MONOMER[i]',
						# 'CYDB-MONOMER[i]',
						# 'EG11735-MONOMER[c]',
						# 'MEND-MONOMER[c]',
						# 'DTDPDEHYDRHAMEPIM-MONOMER[c]',
						# 'EG10973-MONOMER[c]',
						# 'G7037-MONOMER[i]',
						# 'CYST-MONOMER[i]',
						# 'OROTPDECARB-MONOMER[c]',
						# 'DXPREDISOM-MONOMER[c]',
						# 'G7406-MONOMER[i]',
						# 'PHOSPHASERSYN-MONOMER[i]',
						# 'FUMC-MONOMER[c]',
						# 'METHYLMALONYL-COA-MUT-MONOMER[c]',
						# 'LIVH-MONOMER[i]',
						# 'EG10855-MONOMER[e]',
						# 'METI-MONOMER[i]',
						# 'G7158-MONOMER[c]',
						# 'FUMA-MONOMER[c]',
						# 'SDH-MEMB2[i]',
						# 'NHAA-MONOMER[i]',
						# 'GLNP-MONOMER[i]',
						# 'THIG-MONOMER[c]',
						# 'MENF-MONOMER[c]',
						# 'G6551-MONOMER[c]',
						# 'OPPB-MONOMER[i]',
						# 'G6810-MONOMER[c]',
						# 'CHD-MONOMER[c]',
						# 'PANTEPADENYLYLTRAN-MONOMER[c]',
						# 'ACONITASE-MONOMER[c]',
						# 'ORNDECARBOXDEG-MONOMER[c]',
						# 'EG12298-MONOMER[p]',
						# 'MALTACETYLTRAN-MONOMER[c]',
						# 'GLUCONOKINII-MONOMER[c]',
						# 'G7423-MONOMER[c]',
						# 'ACYLCOASYN-MONOMER[i]',
						# 'LYSU-MONOMER[c]',
						# 'TRANSKETOII-MONOMER[c]',
						# 'POTB-MONOMER[i]',
						# 'H2PTEROATESYNTH-MONOMER[c]',
						# 'CYOD-MONOMER[i]',
						# 'ARABISOM-MONOMER[c]',
						# 'EG11373-MONOMER[c]',
						# 'ATPH-MONOMER[i]',
						# 'UDP-NACMUR-ALA-LIG-MONOMER[c]',
						# 'GLTK-MONOMER[i]',
						# 'UGPE-MONOMER[i]',
						# 'AROD-MONOMER[c]',
						# 'EG10572-MONOMER[c]',
						# 'EMRE-MONOMER[i]',
						# 'THREDEHYDSYN-MONOMER[c]',
						# 'BGLF-MONOMER[i]',
						# 'GLUTATHIONE-REDUCT-NADPH-MONOMER[c]',
						# 'G7596-MONOMER[c]',
						# '7-ALPHA-HYDROXYSTEROID-DEH-MONOMER[c]',
						# 'ATPB-MONOMER[i]',
						# 'GLUSYNLARGE-MONOMER[c]',
						# 'EG11517-MONOMER[c]',
						# 'NAG6PDEACET-MONOMER[c]',
						# 'EG11081-MONOMER[c]',
						# 'NUOK-MONOMER[i]',
						# 'GTP-CYCLOHYDRO-II-MONOMER[c]',
						# 'NRDA-MONOMER[c]',
						# 'LIPIDADISACCHARIDESYNTH-MONOMER[i]',
						# 'DEOA-MONOMER[c]',
						# 'G7212-MONOMER[c]',
						# 'G7590-MONOMER[c]',
						# 'NRDB-MONOMER[c]',
						# 'G6645-MONOMER[c]',
						# 'GSP-MONOMER[c]',
						# 'SBMA-MONOMER[i]',
						# 'G6731-MONOMER[c]',
						# 'ASPARTASE-MONOMER[c]',
						# 'HISTPHOSTRANS-MONOMER[c]',
						# 'G7530-MONOMER[c]',
						# 'THREODEHYD-MONOMER[c]',
						# 'DIOHBUTANONEPSYN-MONOMER[i]',
						# 'ASNSYNA-MONOMER[c]',
						# 'AGMATIN-MONOMER[c]',
						# 'HISM-MONOMER[i]',
						# 'ACETYLORNDEACET-MONOMER[c]',
						# 'PROP-MONOMER[i]',
						# 'PPPGPPHYDRO-MONOMER[c]',
						# 'UDPGLCNACEPIM-MONOMER[c]',
						# 'GSK-MONOMER[c]',
						# 'ALKAPHOSPHA-MONOMER[p]',
						# 'PYRUVOXID-MONOMER[i]',
						# 'MALDEXPHOSPHORYL-MONOMER[c]',
						# 'EG11371-MONOMER[i]',
						# 'DHHB-METHYLTRANSFER-MONOMER[i]',
						# 'EG10124-MONOMER[c]',
						# 'HISS-MONOMER[c]',
						# 'EG11294-MONOMER[c]',
						# 'DGTPTRIPHYDRO-MONOMER[c]',
						# 'RIBOFLAVINSYNDEAM-MONOMER[c]',
						# 'UPPSYN-MONOMER[c]',
						# 'EG11023-MONOMER[c]',
						# 'DLACTDEHYDROGNAD-MONOMER[c]',
						# 'GUANYL-KIN-MONOMER[c]',
						# 'G6811-MONOMER[c]',
						# '7KAPSYN-MONOMER[c]',
						# 'QOR-MONOMER[c]',
						# 'TYRB-MONOMER[c]',
						# 'G7055-MONOMER[c]',
						# 'GLYC3PDEHYDROGBIOSYN-MONOMER[c]',
						# 'EG11723-MONOMER[c]',
						# 'LEUC-MONOMER[c]',
						# 'NRDE-MONOMER[c]',
						# 'ORNDECARBOX-BIO-MONOMER[c]',
						# 'CYTIDEAM-MONOMER[c]',
						# 'RIBOFLAVIN-SYN-MONOMER[c]',
						# 'HISTDEHYD-MONOMER[c]',
						# 'DALADEHYDROGA-MONOMER[i]',
						# 'ASNSYNB-MONOMER[c]',
						# 'QUINOPRIBOTRANS-MONOMER[c]',
						# 'PURK-MONOMER[c]',
						# 'ADENYLYLSULFKIN-MONOMER[c]',
						# 'GLYS-MONOMER[c]',
						# 'G6627-MONOMER[c]',
						# 'ACRB-MONOMER[i]',
						# 'G7128-MONOMER[c]',
						# 'EG11298-MONOMER[c]',
						# 'NUOL-MONOMER[i]',
						# 'G7184-MONOMER[c]',
						# 'ACSERLYB-MONOMER[c]',
						# 'G6759-MONOMER[c]',
						# 'EG10695-MONOMER[c]',
						# 'BIOTIN-SYN-MONOMER[c]',
						# 'THYMIDYLATESYN-MONOMER[c]',
						# 'EG11816-MONOMER[c]',
						# 'ACETYLGLUTKIN-MONOMER[c]',
						# 'G6906-MONOMER[c]',
						# 'ANTHRANSYNCOMPII-MONOMER[c]',
						# 'EG10395-MONOMER[c]',
						# 'ASPS-MONOMER[c]',
						# 'PDXA-MONOMER[c]',
						# 'CHORISMUTPREPHENDEHYDRAT-MONOMER[c]',
						# 'UDPGLUCEPIM-MONOMER[c]',
						# '3-OXOACYL-ACP-SYNTHII-MONOMER[c]',
						# 'METG-MONOMER[c]',
						# 'PDXY-MONOMER[c]',
						# 'HMP-P-KIN-MONOMER[c]',
						# 'DAPASYN-MONOMER[c]',
						# 'O-SUCCHOMOSERLYASE-MONOMER[c]',
						# 'PNTB-MONOMER[i]',
						# 'HOMSUCTRAN-MONOMER[c]',
						# 'L-GLN-FRUCT-6-P-AMINOTRANS-MONOMER[c]',
						# 'EG12410-MONOMER[c]',
						# 'MANX-MONOMER[i]',
						# 'PROS-MONOMER[c]',
						# 'G7564-MONOMER[c]',
						# 'HYDROPEROXIDI-MONOMER[c]',
						# 'YIIP-MONOMER[i]',
						# 'FABH-MONOMER[c]',
						# 'ASPKINIII-MONOMER[c]',
						# 'DCTP-DEAM-MONOMER[c]',
						# 'PANTOATE-BETA-ALANINE-LIG-MONOMER[c]',
						# 'SPERMIDINESYN-MONOMER[c]',
						# 'AROH-MONOMER[c]',
						# 'G7865-MONOMER[c]',
						# 'ENTE-MONOMER[i]',
						# 'TRPS-MONOMER[c]',
						# 'EG10613-MONOMER[i]',
						# 'PAPSSULFOTRANS-MONOMER[c]',
						# 'GSAAMINOTRANS-MONOMER[c]',
						# 'DTDPGLUCDEHYDRAT-MONOMER[c]',
						# 'G7454-MONOMER[c]',
						# 'TYRS-MONOMER[c]',
						# 'NRDF-MONOMER[c]',
						# 'AROF-MONOMER[c]',
						# 'PTSG-MONOMER[i]',
						# 'SIROHEMESYN-MONOMER[c]',
						# 'EG12633-MONOMER[c]',
						# 'HOMOSERKIN-MONOMER[c]',
						# 'CARBPSYN-SMALL[c]',
						# 'CHORISMUTPREPHENDEHYDROG-MONOMER[c]',
						# 'ACETOLACTSYNIII-ICHAIN-MONOMER[c]',
						# 'CHAINF-MONOMER[c]',
						# 'G7579-MONOMER[c]',
						# 'NAD-SYNTH-MONOMER[c]',
						# 'DIHYDROXYACIDDEHYDRAT-MONOMER[c]',
						# 'THIOREDOXIN-REDUCT-NADPH-MONOMER[c]',
						# 'HOLO-ACP-SYNTH-MONOMER[c]',
						# 'QUINOLINATE-SYNTHA-MONOMER[c]',
						# 'FABB-MONOMER[c]',
						# 'DIAMINOPIMEPIM-MONOMER[c]',
						# 'IMIDPHOSPHADEHYDHISTIDPHOSPHA-MONOMER[c]',
						# 'SERS-MONOMER[c]',
						# '3-ISOPROPYLMALDEHYDROG-MONOMER[c]',
						# 'EG11692-MONOMER[c]',
						# 'LYSS-MONOMER[c]',
						# 'BIOTIN-CARBOXYL-MONOMER[c]',
						# 'GLPF-MONOMER[i]',
						# 'MONOMER-43[i]',
						# 'ADHC-MONOMER[c]',
						# 'G7405-MONOMER[i]',
						# 'G7662-MONOMER[c]',
						# 'NAG1P-URIDYLTRANS-MONOMER[c]',
						# 'TRYPSYN-BPROTEIN[c]',
						# 'UDPHYDROXYMYRGLUCOSAMNACETYLTRANS-MONO[c]',
						# 'EG12600-MONOMER[c]',
						# 'GMP-SYN-MONOMER[c]',
						# 'HYDROPEROXIDII-MONOMER[c]',
						# 'DCYSDESULF-MONOMER[c]',
						# 'ATPF-MONOMER[i]',
						# 'ACONITATEDEHYDRB-MONOMER[c]',
						# 'FOLD-MONOMER[c]',
						# 'OPPSYN-MONOMER[c]',
						# 'TRANSKETOI-MONOMER[c]',
						# 'HISP-MONOMER[i]',
						# 'KDPGALDOL-4OH2OXOGLUTARALDOL-MONOMER[c]',
						# 'DIACYLGLYKIN-MONOMER[i]',
						# 'G7325-MONOMER[c]',
						# 'PROTOPORGENOXI-MONOMER[c]',
						# 'ADENPRIBOSYLTRAN-MONOMER[c]',
						# 'UDPNACETYLGLUCOSAMACYLTRANS-MONOMER[c]',
						# 'GLUTATHIONE-SYN-MONOMER[c]',
						# 'DUTP-PYROP-MONOMER[c]',
						# 'PHES-MONOMER[c]',
						# 'THRS-MONOMER[c]',
						# 'EG11090-MONOMER[c]',
						# 'GPT-MONOMER[i]',
						# 'PGLUCISOM[c]',
						# 'AIRS-MONOMER[c]',
						# 'CHAINI-MONOMER[c]',
						# 'PD01343[c]',
						# 'RIB5PISOMA-MONOMER[c]',
						# 'PDXH-MONOMER[c]',
						# 'G6912-MONOMER[c]',
						# 'ATPPHOSRIBOSTRANS-MONOMER[c]',
						# 'SUCCCOASYN-BETA[c]',
						# 'FABA-MONOMER[c]',
						# 'EG10838-MONOMER[c]',
						# 'DALADALALIGB-MONOMER[c]',
						# 'AROC-MONOMER[c]',
						# 'F16B-MONOMER[c]',
						# 'ACETYLORNTRANSAM-MONOMER[c]',
						# 'ASNS-MONOMER[c]',
						# 'GLTJ-MONOMER[i]',
						# 'LTAA-MONOMER[c]',
						# 'G7409-MONOMER[c]',
						# 'GLUTSEMIALDEHYDROG-MONOMER[c]',
						# 'CYSN-MONOMER[c]',
						# 'HISQ-MONOMER[i]',
						# 'CDPDIGLYSYN-MONOMER[i]',
						# 'G7663-MONOMER[c]',
						# 'E3-MONOMER[i]',
						# 'NADH-DHII-MONOMER[c]',
						# 'ASPKINIIHOMOSERDEHYDROGII-MONOMER[c]',
						# '6PGLUCONDEHYDROG-MONOMER[c]',
						# 'PEPSYNTH-MONOMER[c]',
						# 'GLUTKIN-MONOMER[c]',
						# 'DIHYDROOROT-MONOMER[c]',
						# 'PKII-MONOMER[c]',
						# '6PFK-1-MONOMER[c]',
						# 'AERGLYC3PDEHYDROG-MONOMER[i]',
						# 'GMP-REDUCT-MONOMER[c]',
						# 'SAICARSYN-MONOMER[c]',
						# 'PRPPAMIDOTRANS-MONOMER[c]',
						# 'GLYOXI-MONOMER[c]',
						# 'GLUC1PADENYLTRANS-MONOMER[c]',
						# 'MHPDHYDROL-MONOMER[c]',
						# 'KDO-8PSYNTH-MONOMER[c]',
						# 'GLUTAMIDOTRANS-MONOMER[c]',
						# 'E1P-MONOMER[c]',
						# 'EG12656-MONOMER[c]',
						# 'ADENYLOSUCCINATE-SYN-MONOMER[c]',
						# 'CYSTATHIONINE-BETA-LYASE-MONOMER[c]',
						# 'METHYLENETHFREDUCT-MONOMER[c]',
						# 'ERYTH4PDEHYDROG-MONOMER[c]',
						# 'G7185-MONOMER[c]',
						# 'CTPSYN-MONOMER[c]',
						# 'POTC-MONOMER[i]',
						# 'PHOSACETYLTRANS-MONOMER[c]',
						# 'EG11009-MONOMER[e]',
						# 'URACIL-PRIBOSYLTRANS-MONOMER[c]',
						# 'DIHYDROPICRED-MONOMER[c]',
						# 'LACTALDDEHYDROG-MONOMER[c]',
						# 'DIHYDRODIPICSYN-MONOMER[c]',
						# 'ATPD-MONOMER[i]',
						# 'METHGLYSYN-MONOMER[c]',
						# 'EG11663-MONOMER[c]',
						# 'G6106-MONOMER[c]',
						# 'EG12345-MONOMER[c]',
						# 'DXS-MONOMER[c]',
						# 'HYPOXANPRIBOSYLTRAN-MONOMER[c]',
						# 'ASPAMINOTRANS-MONOMER[c]',
						# 'ASPKINIHOMOSERDEHYDROGI-MONOMER[c]',
						# 'EG11591-MONOMER[c]',
						# 'DIAMINOPIMDECARB-MONOMER[c]',
						# 'PSERTRANSAM-MONOMER[c]',
						# 'GABATRANSAM-MONOMER[c]',
						# 'ANSA-MONOMER[c]',
						# 'ATPA-MONOMER[i]',
						# 'UMPKI-MONOMER[c]',
						# 'MONOMER0-1981[c]',
						# 'EG10694-MONOMER[c]',
						# 'EG11315-MONOMER[c]',
						# 'EG11703-MONOMER[i]',
						# 'EG12026-MONOMER[c]',
						# 'THIOESTERI-MONOMER[p]',
						# 'PEPCARBOX-MONOMER[c]',
						# 'DTDPGLUCOSEPP-MONOMER[c]',
						# '3-OXOACYL-ACP-REDUCT-MONOMER[c]',
						# 'CYTDEAM-MONOMER[c]',
						# 'ARGSUCCINSYN-MONOMER[c]',
						# 'ASP-SEMIALDEHYDE-DEHYDROGENASE-MONOMER[c]',
						# 'ASL-MONOMER[c]',
						# 'MONOMER0-2001[c]',
						# 'TPI-MONOMER[c]',
						# 'EG11306-MONOMER[c]',
						# 'PDXK-MONOMER[c]',
						# 'CYDC-MONOMER[i]',
						# 'E1O-MONOMER[c]',
						# 'ENTA-MONOMER[c]',
						# 'EG12310-MONOMER[c]',
						# 'FRUCTBISALD-CLASSII-MONOMER[c]',
						# 'S-ADENMETSYN-MONOMER[c]',
						# 'DEOD-MONOMER[c]',
						# 'FADB-MONOMER[c]',
						# 'ALARACEBIOSYN-MONOMER[c]',
						# 'UDHA-MONOMER[c]',
						# 'DETHIOBIOTIN-SYN-MONOMER[c]',
						# 'NUCLEOSIDE-DIP-KIN-MONOMER[c]',
						# 'E2P-MONOMER[c]',
						# 'IMP-DEHYDROG-MONOMER[c]',
						# 'SERINE-O-ACETTRAN-MONOMER[c]',
						# 'G7242-MONOMER[c]',
						# 'AMP-NUCLEOSID-MONOMER[c]',
						# 'PROW-MONOMER[i]',
						# 'FRUCBISALD-CLASSI-MONOMER[c]',
						# 'BRANCHED-CHAINAMINOTRANSFER-MONOMER[c]',
						# 'COPROGENOXI-MONOMER[c]',
						# 'AROG-MONOMER[c]',
						# 'G6662-MONOMER[c]',
						# 'GLYCEROL-KIN-MONOMER[c]',
						# 'MONOMER0-541[c]',
						# 'SPERMACTRAN-MONOMER[c]',
						# 'EG11396-MONOMER[i]',
						# 'PGLYCEROLTRANSI-MONOMER[i]',
						# 'PURE-MONOMER[c]',
						# 'URPHOS-MONOMER[c]',
						# 'N-ACETYLTRANSFER-MONOMER[c]',
						# 'MALIC-NAD-MONOMER[c]',
						# 'LDC2-MONOMER[c]',
						# 'FABZ-MONOMER[c]',
						# 'FORMYLTHFDEFORMYL-MONOMER[c]',
						# 'PDXJ-MONOMER[c]',
						# 'GLUTDECARBOXB-MONOMER[c]',
						# 'SPOT-MONOMER[c]',
						# 'GLUTDECARBOXA-MONOMER[c]',
						# 'PORPHOBILSYNTH-MONOMER[c]',
						# 'ENOYL-ACP-REDUCT-NADH-MONOMER[c]',
						# 'TRANSALDOLB-MONOMER[c]',
						# 'OPPC-MONOMER[i]',
						# 'EUTC-MONOMER[c]',
						# '3-CH3-2-OXOBUTANOATE-OH-CH3-XFER-MONOMER[c]',
						# 'FOCA-MONOMER[i]',
						# 'SUCCSEMIALDDEHYDROG-MONOMER[c]',
						# 'O-SUCCINYLBENZOATE-COA-LIG-MONOMER[c]',
						# 'MALATE-DEHASE-MONOMER[c]',
						# 'G6644-MONOMER[c]',
						# 'GDHA-MONOMER[c]',
						# 'PGLYCDEHYDROG-MONOMER[c]',
						# 'H2NTPEPIM-MONOMER[c]',
						# 'SORB6PDEHYDROG-MONOMER[c]',
						# 'GLYOHMETRANS-MONOMER[c]',
						# 'UGPC-MONOMER[i]',
						# 'EG12319-MONOMER[c]',
						# 'NAPHTHOATE-SYN-MONOMER[c]',
						# 'EG10004-MONOMER[c]',
						# 'G7213-MONOMER[c]',
						# 'ACSERLYA-MONOMER[c]',
						# 'EG10355-MONOMER[c]',
						# 'CITSYN-MONOMER[c]',
						# 'GLYCPDIESTER-PERI-MONOMER[p]',
						# 'BADH-MONOMER[c]',
						# 'GLUTAMINESYN-MONOMER[c]',
						# 'ASPCARBCAT-MONOMER[c]',
						# 'ALPHACOMP-MONOMER[c]',
						# 'PYRROLINECARBREDUCT-MONOMER[c]',
						# 'AMTB-MONOMER[i]',
						# 'G7168-MONOMER[c]',
						# 'LIVM-MONOMER[i]',
						# 'MALIC-NADP-MONOMER[c]',
						# 'G6710-MONOMER[c]',
						# 'TRYPTOPHAN-MONOMER[c]',
						# 'ACNEULY-MONOMER[c]',
						# 'EG10817-MONOMER[c]',
						# 'PKI-MONOMER[c]',
						# 'ADHE-MONOMER[c]',
						# 'E2O-MONOMER[c]',
						# 'EG10671-MONOMER[e]',
						# 'GTP-CYCLOHYDRO-I-MONOMER[c]',
						# 'ENOLASE-MONOMER[c]',
						# 'ISOCITDEH-SUBUNIT[c]',
						# 'LUMAZINESYN-MONOMER[c]',
						# 'EG10670-MONOMER[e]',
						# 'PSD-MONOMER[c]',
						# 'YADQ-MONOMER[i]',
						# 'H2NEOPTERINALDOL-MONOMER[c]',
						# 'ATPE-MONOMER[i]',
						# 'KETOLREDUCTOISOM-MONOMER[c]',
						# 'GPMA-MONOMER[c]',
						# 'ZNUB-MONOMER[i]',
						# 'INORGPYROPHOSPHAT-MONOMER[c]',
						# 'G6804-MONOMER[c]',
						# 'G7106-MONOMER[c]',
						# 'XANTHOSINEPHOSPHORY-MONOMER[c]',
						# 'ATOA-MONOMER[c]',
						# 'EG11234-MONOMER[c]',
						# 'EG11245-MONOMER[c]',
						# 'EG12279-MONOMER[c]',
						# 'FUCPALDOL-MONOMER[c]',
						# 'G6716-MONOMER[m]',
						# 'G7145-MONOMER[c]',
						# 'LYXK-MONOMER[c]',
						# 'NARK-MONOMER[i]',
						# 'NIKA-MONOMER[i]',
						# 'NIKC-MONOMER[i]',
						# 'XYLH-MONOMER[i]',
						# 'YCBM-MONOMER[i]',
						# 'YJCW-MONOMER[i]',
						# 'BETAGALACTOSID-MONOMER[c]',
						# 'G6277-MONOMER[c]',
						# 'G7921-MONOMER[o]',
						# 'KDPB-MONOMER[i]',
						# 'TNAB-MONOMER[i]',
						# 'ANSB-MONOMER[c]',
						# 'EG10513-MONOMER[i]',
						# 'FUMB-MONOMER[c]',
						# 'G6196-MONOMER[c]',
						# 'G7236-MONOMER[c]',
						# 'SUCCARGDIHYDRO-MONOMER[c]',
						# 'THREDEHYDCAT-MONOMER[c]',
						# 'YGFU-MONOMER[i]',
						# 'CADB-MONOMER[i]',
						# 'FUCP-MONOMER[i]',
						# 'G6715-MONOMER[c]',
						# 'G7160-MONOMER[c]',
						# 'G7485-MONOMER[c]',
						# 'ALDDEHYDROGB-MONOMER[c]',
						# 'AQPZ-MONOMER[i]',
						# 'EG12293-MONOMER[c]',
						# 'G6198-MONOMER[c]',
						# 'G6717-MONOMER[c]',
						# 'G7723-MONOMER[c]',
						# 'GLYCDEH-MONOMER[c]',
						# 'LACTALDREDUCT-MONOMER[c]',
						# 'MANNPGUANYLTRANGDP-MONOMER[c]',
						# 'PHNE-MONOMER[c]',
						# 'YJIO-MONOMER[i]',
						# 'ACETYL-COA-ACETYLTRANSFER-MONOMER[c]',
						# 'EG11845-MONOMER[c]',
						# 'TTDA-MONOMER[c]',
						# 'B1600-MONOMER[i]',
						# 'DCUB-MONOMER[i]',
						# 'G6285-MONOMER[c]',
						# 'G6958-MONOMER[c]',
						# 'G7288-MONOMER[c]',
						# 'G7920-MONOMER[p]',
						# 'PHOSMANMUT-MONOMER[c]',
						# 'XYLF-MONOMER[p]',
						# 'B1296-MONOMER[i]',
						# 'EG11289-MONOMER[c]',
						# 'G6713-MONOMER[c]',
						# 'G6984-MONOMER[i]',
						# 'G7486-MONOMER[c]',
						# 'NIKE-MONOMER[i]',
						# 'NIRB-MONOMER[c]',
						# 'PHND-MONOMER[i]',
						# 'CITRYLY-MONOMER[c]',
						# 'EG12286-MONOMER[c]',
						# 'FDNI-MONOMER[i]',
						# 'FDOG-MONOMER[c]',
						# 'G6200-MONOMER[c]',
						# 'G6709-MONOMER[c]',
						# 'G6999-MONOMER[i]',
						# 'G7516-MONOMER[c]',
						# 'HYCD-MONOMER[i]',
						# 'LACY-MONOMER[i]',
						# 'NIKD-MONOMER[i]',
						# 'NIRC-MONOMER[i]',
						# 'PHENDEHYD-MONOMER[c]',
						# 'RHAMNULPALDOL-MONOMER[c]',
						# 'EG12033-MONOMER[c]',
						# 'G6199-MONOMER[c]',
						# 'G6655-MONOMER[c]',
						# 'G6708-MONOMER[c]',
						# 'SUCCORNTRANSAM-MONOMER[c]',
						# 'YJDL-MONOMER[i]',
						# 'CITTRANS-MONOMER[c]',
						# 'DMSC-MONOMER[i]',
						# 'EG11902-MONOMER[i]',
						# 'G6918-MONOMER[c]',
						# 'G7859-MONOMER[c]',
						# 'XAPB-MONOMER[i]',
						# 'FDNH-MONOMER[i]',
						# 'CITC-MONOMER[c]',
						# 'G7105-MONOMER[i]',
						# 'HYCF-MONOMER[c]',
						# 'IDONDEHYD-MONOMER[c]',
						# 'KEFC-MONOMER[i]',
						# 'SUCCGLUDESUCC-MONOMER[c]',
						# 'YCBE-MONOMER[i]',
						# 'ANSP-MONOMER[i]',
						# 'PITB-MONOMER[i]',
						# 'ARGDECARBOXDEG-MONOMER[c]',
						# 'G6530-MONOMER[p]',
						# 'G7415-MONOMER[c]',
						# 'G7724-MONOMER[c]',
						# 'NANK-MONOMER[c]',
						# 'APHA-MONOMER[p]',
						# 'APPB-MONOMER[i]',
						# 'B1006-MONOMER[i]',
						# 'EG12438-MONOMER[c]',
						# 'EXUT-MONOMER[i]',
						# 'G6278-MONOMER[c]',
						# 'GNTP-MONOMER[i]',
						# 'MHPELY-MONOMER[c]',
						# 'POTI-MONOMER[i]',
						# 'ADHP-MONOMER[c]',
						# 'EG12285-MONOMER[c]',
						# 'G7726-MONOMER[c]',
						# 'LCTP-MONOMER[i]',
						# 'YJCX-MONOMER[i]',
						# 'B0709-MONOMER[i]',
						# 'EG11551-MONOMER[c]',
						# 'EG12384-MONOMER[c]',
						# 'G6478-MONOMER[i]',
						# 'G7399-MONOMER[i]',
						# 'YNFJ-MONOMER[i]',
						# 'DMK-MONOMER[i]',
						# 'DMSB-MONOMER[c]',
						# 'GLUCONREDUCT-MONOMER[c]',
						# 'SUCCGLUALDDEHYD-MONOMER[c]',
						# 'ARAG-MONOMER[i]',
						# 'EG12287-MONOMER[c]',
						# 'TRE6PHYDRO-MONOMER[c]',
						# 'EG11848-MONOMER[c]',
						# 'G6782-MONOMER[e]',
						# 'LYSDECARBOX-MONOMER[c]',
						# 'B1634-MONOMER[i]',
						# 'B2170-MONOMER[i]',
						# 'B2975-MONOMER[i]',
						# 'EG10723-MONOMER[c]',
						# 'G7517-MONOMER[c]',
						# 'KCH-MONOMER[i]',
						# 'POTE-MONOMER[i]',
						# 'DEHYDDEOXPHOSGALACT-ALDOL-MONOMER[c]',
						# 'G6141-MONOMER[c]',
						# 'GLUCONOKINI-MONOMER[c]',
						# 'MGTA-MONOMER[i]',
						# 'NANE-MONOMER[c]',
						# 'G7647-MONOMER[c]',
						# 'G7911-MONOMER[c]',
						# 'HYCG-MONOMER[c]',
						# 'KEFB-MONOMER[i]',
						# 'NANT-MONOMER[i]',
						# 'TDCC-MONOMER[i]',
						# 'ACYLCOADEHYDROG-MONOMER[i]',
						# 'G7164-MONOMER[c]',
						# 'ANGLYC3PDEHYDROGSUBUNITA-MONOMER[i]',
						# 'EG10515-MONOMER[i]',
						# 'G6859-MONOMER[i]',
						# 'YHIP-MONOMER[i]',
						# 'ALTRO-OXIDOREDUCT-MONOMER[c]',
						# 'EG10724-MONOMER[c]',
						# 'EG11095-MONOMER[c]',
						# 'G6246-MONOMER[c]',
						# 'G6437-MONOMER[p]',
						# 'G6561-MONOMER[i]',
						# 'G7138-MONOMER[i]',
						# 'G7504-MONOMER[i]',
						# 'KDUD-MONOMER[c]',
						# 'PGLUCONDEHYDRAT-MONOMER[c]',
						# 'XYLE-MONOMER[i]',
						# 'EG11822-MONOMER[c]',
						# 'B0070-MONOMER[i]',
						# 'DCTA-MONOMER[i]',
						# 'EG11436-MONOMER[c]',
						# 'G6310-MONOMER[i]',
						# 'G7410-MONOMER[o]',
						# 'G7449-MONOMER[c]',
						# 'G7502-MONOMER[c]',
						# 'G7910-MONOMER[c]',
						# 'PALMITOTRANS-MONOMER[i]',
						# 'YHHO-MONOMER[i]',
						# 'EG11352-MONOMER[c]',
						# 'EG11957-MONOMER[c]',
						# 'EG12134-MONOMER[i]',
						# 'G6406-MONOMER[i]',
						# 'G6986-MONOMER[c]',
						# 'G7860-MONOMER[c]',
						# 'NUPG-MONOMER[i]',
						# 'B4141-MONOMER[i]',
						# 'DSERDEAM-MONOMER[c]',
						# 'G6208-MONOMER[c]',
						# 'LSERINEDEAM1-MONOMER[c]',
						# 'ALDHDEHYDROG-MONOMER[c]',
						# 'EG11288-MONOMER[c]',
						# 'G6329-MONOMER[c]',
						# 'G6719-MONOMER[c]',
						# 'G6805-MONOMER[c]',
						# 'G7868-MONOMER[c]',
						# 'PABASYN-COMPI-MONOMER[c]',
						# 'XASA-MONOMER[i]',
						# 'B0752-MONOMER[i]',
						# 'EG11919-MONOMER[i]',
						# 'G7011-MONOMER[c]',
						# 'PHEP-MONOMER[i]',
						# 'CDPDIGLYPYPHOSPHA-MONOMER[i]',
						# 'DEOXYRIBOSE-P-ALD-MONOMER[c]',
						# 'EG12357-MONOMER[c]',
						# 'G6358-MONOMER[c]',
						# 'G7098-MONOMER[i]',
						# 'G7123-MONOMER[c]',
						# 'G7545-MONOMER[c]',
						# 'MONOMER0-149[c]',
						# 'YJCV-MONOMER[i]',
						# 'LAUROYLACYLTRAN-MONOMER[i]',
						# 'EG12432-MONOMER[c]',
						# 'KUP-MONOMER[i]',
						# 'NIRD-MONOMER[c]',
						# 'RHAT-MONOMER[i]',
						# 'G6244-MONOMER[c]',
						# 'PROPKIN-MONOMER[c]',
						# 'YEJB-MONOMER[i]',
						# 'AKBLIG-MONOMER[c]',
						# 'BETT-MONOMER[i]',
						# 'EG12237-MONOMER[c]',
						# 'EG12445-MONOMER[i]',
						# 'GLY3KIN-MONOMER[c]',
						# 'ALARACECAT-MONOMER[c]',
						# 'EG11956-MONOMER[c]',
						# 'RHAMNULOKIN-MONOMER[c]',
						# 'MONOMER0-561[i]',
						# 'PSTC-MONOMER[i]',
						# 'EG11425-MONOMER[c]',
						# 'GLUTRNAREDUCT-MONOMER[c]',
						# 'NUOJ-MONOMER[i]',
						# 'PPENTOMUT-MONOMER[c]',
						# 'YGFO-MONOMER[i]',
						# 'ARAE-MONOMER[i]',
						# 'MHPF-MONOMER[c]',
						# 'PHOSPHAGLYPSYN-MONOMER[i]',
						# 'UGPA-MONOMER[i]',
						# 'YEJE-MONOMER[i]',
						# 'ARGSUCCTRAN-MONOMER[c]',
						# 'EG12267-MONOMER[i]',
						# 'G6798-MONOMER[c]',
						# 'G7166-MONOMER[c]',
						# 'GALACTURIDYLYLTRANS-MONOMER[c]',
						# 'GKI-MONOMER[c]',
						# 'NUON-MONOMER[i]',
						# 'POTH-MONOMER[i]',
						# 'YNEA-MONOMER[i]',
						# 'DPPC-MONOMER[i]',
						# 'EG11826-MONOMER[i]',
						# 'EG12424-MONOMER[c]',
						# 'G7558-MONOMER[c]',
						# 'AAS-MONOMER[i]',
						# 'ARTQ-MONOMER[i]',
						# 'DPPF-MONOMER[i]',
						# 'EG10950-MONOMER[p]',
						# 'FDOH-MONOMER[i]',
						# 'G6503-MONOMER[c]',
						# 'G6718-MONOMER[m]',
						# 'G7889-MONOMER[i]',
						# 'GLTP-MONOMER[i]',
						# 'YLID-MONOMER[i]',
						# 'YNJD-MONOMER[i]',
						# 'ZNUC-MONOMER[i]',
						# '1-ACYLGLYCEROL-3-P-ACYLTRANSFER-MONOMER[i]',
						# '2-DEHYDROPANTOATE-REDUCT-MONOMER[c]',
						# '2-ISOPROPYLMALATESYN-MONOMER[c]',
						# '2-OCTAPRENYL-METHOXY-BENZOQ-METH-MONOMER[c]',
						# '4OHBENZOATE-OCTAPRENYLTRANSFER-MONOMER[i]',
						# '6PGLUCONOLACT-MONOMER[c]',
						# 'ABC-MONOMER[i]',
						# 'ACETATEKINA-MONOMER[c]',
						# 'ACETOLACTSYNIII-HCHAIN-MONOMER[c]',
						# 'ACS-MONOMER[c]',
						# 'ADENODEAMIN-MONOMER[c]',
						# 'ADENYL-KIN-MONOMER[c]',
						# 'ADENYLATECYC-MONOMER[c]',
						# 'AICARTRANSIMPCYCLO-CPLX[c]',
						# 'ALAS-MONOMER[c]',
						# 'ALDOSE1EPIM-MONOMER[c]',
						# 'ALTRODEHYDRAT-MONOMER[c]',
						# 'AMYLOMALT-MONOMER[c]',
						# 'ANTHRANSYNCOMPI-MONOMER[c]',
						# 'ARAH-MONOMER[i]',
						# 'ARGS-MONOMER[c]',
						# 'ARGSUCCINLYA-MONOMER[c]',
						# 'AROA-MONOMER[c]',
						# 'AROB-MONOMER[c]',
						# 'AROE-MONOMER[c]',
						# 'AROK-MONOMER[c]',
						# 'AROL-MONOMER[c]',
						# 'AROP-MONOMER[i]',
						# 'ARTJ-MONOMER[p]',
						# 'ARTP-MONOMER[i]',
						# 'ASPDECARBOX-MONOMER[c]',
						# 'ATPC-MONOMER[i]',
						# 'ATPG-MONOMER[i]',
						# 'BETACOMP-MONOMER[c]',
						# 'BIOTINLIG-MONOMER[c]',
						# 'BRNQ-MONOMER[i]',
						# 'BTUE-MONOMER[c]',
						# 'CARBPSYN-LARGE[c]',
						# 'CARDIOLIPSYN-MONOMER[i]',
						# 'CHAA-MONOMER[i]',
						# 'CHEB-MONOMER[c]',
						# 'CHER-MONOMER[c]',
						# 'CHORPYRLY-MONOMER[c]',
						# 'CMPKI-MONOMER[c]',
						# 'CMR-MONOMER[i]',
						# 'CORA-MONOMER[c]',
						# 'CPM-KDOSYNTH-MONOMER[c]',
						# 'CRR-MONOMER[i]',
						# 'CYCA-MONOMER[i]',
						# 'CYDA-MONOMER[i]',
						# 'CYOA-MONOMER[i]',
						# 'CYOB-MONOMER[i]',
						# 'CYOC-MONOMER[i]',
						# 'CYSA-MONOMER[i]',
						# 'CYSD-MONOMER[c]',
						# 'CYSP-MONOMER[p]',
						# 'CYSS-MONOMER[c]',
						# 'CYSW-MONOMER[i]',
						# 'DALADALALIGA-MONOMER[c]',
						# 'DCUA-MONOMER[i]',
						# 'DEOXYGLUCONOKIN-MONOMER[c]',
						# 'DIHYDROFOLATEREDUCT-MONOMER[c]',
						# 'DIHYDROOROTOX-MONOMER[c]',
						# 'DLACTDEHYDROGFAD-MONOMER[c]',
						# 'DPPA-MONOMER[i]',
						# 'DPPD-MONOMER[i]',
						# 'DTDPDEHYRHAMREDUCT-MONOMER[c]',
						# 'DTDPGLUCDEHYDRAT2-MONOMER[c]',
						# 'DTDPGLUCOSEPP2-MONOMER[c]',
						# 'DTMPKI-MONOMER[c]',
						# 'EG10043-MONOMER[c]',
						# 'EG10048-MONOMER[c]',
						# 'EG10119-MONOMER[c]',
						# 'EG10122-MONOMER[c]',
						# 'EG10246-MONOMER[e]',
						# 'EG10280-MONOMER[o]',
						# 'EG10299-MONOMER[c]',
						# 'EG10344-MONOMER[i]',
						# 'EG10370-MONOMER[c]',
						# 'EG10374-MONOMER[p]',
						# 'EG10595-MONOMER[c]',
						# 'EG10634-MONOMER[c]',
						# 'EG10696-MONOMER[i]',
						# 'EG10739-MONOMER[i]',
						# 'EG10757-MONOMER[p]',
						# 'EG10758-MONOMER[c]',
						# 'EG10985-MONOMER[p]',
						# 'EG11003-MONOMER[c]',
						# 'EG11035-MONOMER[o]',
						# 'EG11080-MONOMER[c]',
						# 'EG11082-MONOMER[c]',
						# 'EG11112-MONOMER[c]',
						# 'EG11158-MONOMER[c]',
						# 'EG11167-MONOMER[i]',
						# 'EG11177-MONOMER[c]',
						# 'EG11189-MONOMER[c]',
						# 'EG11195-MONOMER[c]',
						# 'EG11202-MONOMER[c]',
						# 'EG11239-MONOMER[c]',
						# 'EG11268-MONOMER[c]',
						# 'EG11292-MONOMER[c]',
						# 'EG11333-MONOMER[c]',
						# 'EG11339-MONOMER[c]',
						# 'EG11340-MONOMER[c]',
						# 'EG11341-MONOMER[c]',
						# 'EG11351-MONOMER[c]',
						# 'EG11353-MONOMER[c]',
						# 'EG11423-MONOMER[m]',
						# 'EG11426-MONOMER[i]',
						# 'EG11433-MONOMER[c]',
						# 'EG11440-MONOMER[c]',
						# 'EG11470-MONOMER[c]',
						# 'EG11512-MONOMER[i]',
						# 'EG11569-MONOMER[e]',
						# 'EG11603-MONOMER[c]',
						# 'EG11639-MONOMER[i]',
						# 'EG11736-MONOMER[c]',
						# 'EG11758-MONOMER[c]',
						# 'EG11796-MONOMER[c]',
						# 'EG11817-MONOMER[c]',
						# 'EG11831-MONOMER[c]',
						# 'EG11850-MONOMER[c]',
						# 'EG11939-MONOMER[i]',
						# 'EG11983-MONOMER[c]',
						# 'EG12069-MONOMER[i]',
						# 'EG12115-MONOMER[c]',
						# 'EG12210-MONOMER[c]',
						# 'EG12221-MONOMER[c]',
						# 'EG12312-MONOMER[c]',
						# 'EG12318-MONOMER[p]',
						# 'EG12347-MONOMER[i]',
						# 'EG12352-MONOMER[c]',
						# 'EG12387-MONOMER[c]',
						# 'EG12394-MONOMER[c]',
						# 'EG12399-MONOMER[c]',
						# 'EG12407-MONOMER[c]',
						# 'EG12440-MONOMER[c]',
						# 'EG12666-MONOMER[c]',
						# 'EG12693-MONOMER[c]',
						# 'EG12712-MONOMER[c]',
						# 'EG12713-MONOMER[i]',
						# 'ENTB-MONOMER[c]',
						# 'ENTC-MONOMER[c]',
						# 'ENTD-MONOMER[i]',
						# 'ENTF-MONOMER[c]',
						# 'ERYTHRON4PDEHYDROG-MONOMER[c]',
						# 'EUTB-MONOMER[c]',
						# 'FEOB-MONOMER[i]',
						# 'FGAMSYN-MONOMER[c]',
						# 'FLAVONADPREDUCT-MONOMER[c]',
						# 'FMNREDUCT-MONOMER[c]',
						# 'FOLC-MONOMER[c]',
						# 'FPPSYN-MONOMER[c]',
						# 'FUCULOKIN-MONOMER[c]',
						# 'G6096-MONOMER[c]',
						# 'G6190-MONOMER[c]',
						# 'G6260-MONOMER[i]',
						# 'G6269-MONOMER[c]',
						# 'G6284-MONOMER[c]',
						# 'G6359-MONOMER[p]',
						# 'G6364-MONOMER[c]',
						# 'G6425-MONOMER[c]',
						# 'G6439-MONOMER[i]',
						# 'G6442-MONOMER[c]',
						# 'G6458-MONOMER[i]',
						# 'G6468-MONOMER[c]',
						# 'G6475-MONOMER[c]',
						# 'G6539-MONOMER[c]',
						# 'G6576-MONOMER[c]',
						# 'G6580-MONOMER[c]',
						# 'G6622-MONOMER[o]',
						# 'G6646-MONOMER[c]',
						# 'G6661-MONOMER[c]',
						# 'G6701-MONOMER[c]',
						# 'G6862-MONOMER[c]',
						# 'G6886-MONOMER[p]',
						# 'G6967-MONOMER[c]',
						# 'G6969-MONOMER[c]',
						# 'G7005-MONOMER[c]',
						# 'G7039-MONOMER[i]',
						# 'G7146-MONOMER[i]',
						# 'G7147-MONOMER[i]',
						# 'G7187-MONOMER[c]',
						# 'G7266-MONOMER[c]',
						# 'G7422-MONOMER[c]',
						# 'G7457-MONOMER[o]',
						# 'G7533-MONOMER[o]',
						# 'G7641-MONOMER[c]',
						# 'G7664-MONOMER[i]',
						# 'G7716-MONOMER[p]',
						# 'G7742-MONOMER[c]',
						# 'G7836-MONOMER[c]',
						# 'GABP-MONOMER[i]',
						# 'GALACTOKIN-MONOMER[c]',
						# 'GALP-MONOMER[i]',
						# 'GALPMUT-MONOMER[c]',
						# 'GAPDH-A-MONOMER[c]',
						# 'GART-MONOMER[c]',
						# 'GARTRANSFORMYL2-MONOMER[c]',
						# 'GCVH-MONOMER[c]',
						# 'GCVT-MONOMER[c]',
						# 'GLNH-MONOMER[p]',
						# 'GLNQ-MONOMER[i]',
						# 'GLNS-MONOMER[c]',
						# 'GLTL-MONOMER[i]',
						# 'GLU6PDEHYDROG-MONOMER[c]',
						# 'GLUC1PURIDYLTRANS-MONOMER[c]',
						# 'GLUCOKIN-MONOMER[c]',
						# 'GLURS-MONOMER[c]',
						# 'GLUSYNSMALL-MONOMER[c]',
						# 'GLUTCYSLIG-MONOMER[c]',
						# 'GLUTRACE-MONOMER[c]',
						# 'GLYCEROL-3-P-ACYLTRANSFER-MONOMER[c]',
						# 'GLYCPDIESTER-CYTO-MONOMER[c]',
						# 'GLYCRIBONUCSYN-MONOMER[c]',
						# 'GLYOXII-MONOMER[c]',
						# 'H2NEOPTERINP3PYROPHOSPHOHYDRO-MONOMER[c]',
						# 'H2PTERIDINEPYROPHOSPHOKIN-MONOMER[c]',
						# 'HEMEOSYN-MONOMER[i]',
						# 'HEMN-MONOMER[c]',
						# 'HISJ-MONOMER[p]',
						# 'HISTCYCLOPRATPPHOS[c]',
						# 'HOMOCYSMET-MONOMER[c]',
						# 'HOMOCYSMETB12-MONOMER[c]',
						# 'ILES-MONOMER[c]',
						# 'IPPISOM-MONOMER[c]',
						# 'KDOTRANS-MONOMER[c]',
						# 'L-ASPARTATE-OXID-MONOMER[c]',
						# 'L-LACTDEHYDROGFMN-MONOMER[c]',
						# 'LEUD-MONOMER[c]',
						# 'LEUS-MONOMER[c]',
						# 'LIVF-MONOMER[i]',
						# 'LIVG-MONOMER[i]',
						# 'LIVJ-MONOMER[p]',
						# 'LIVK-MONOMER[p]',
						# 'LSERINEDEAM2-MONOMER[c]',
						# 'LYSP-MONOMER[i]',
						# 'MALONYL-COA-ACP-TRANSACYL-MONOMER[c]',
						# 'MALTODEXGLUCOSID-MONOMER[c]',
						# 'MANNONDEHYDRAT-MONOMER[c]',
						# 'MANNONOXIDOREDUCT-MONOMER[c]',
						# 'MANNPDEHYDROG-MONOMER[c]',
						# 'MANNPISOM-MONOMER[c]',
						# 'MANY-MONOMER[i]',
						# 'MANZ-MONOMER[i]',
						# 'METQ-MONOMER[i]',
						# 'MMUM-MONOMER[c]',
						# 'MONOMER0-1261[c]',
						# 'MONOMER0-148[c]',
						# 'MONOMER0-2663[i]',
						# 'MTR-MONOMER[i]',
						# 'MYRISTOYLACYLTRAN-MONOMER[i]',
						# 'N-ACETYLGLUTPREDUCT-MONOMER[c]',
						# 'NACGLCTRANS-MONOMER[c]',
						# 'NHAB-MONOMER[i]',
						# 'NICONUCADENYLYLTRAN-MONOMER[c]',
						# 'NICOTINAMID-MONOMER[c]',
						# 'NICOTINATEPRIBOSYLTRANS-MONOMER[c]',
						# 'NUOA-MONOMER[i]',
						# 'NUOB-MONOMER[i]',
						# 'NUOC-MONOMER[i]',
						# 'NUOE-MONOMER[i]',
						# 'NUOF-MONOMER[i]',
						# 'NUOG-MONOMER[i]',
						# 'NUOH-MONOMER[i]',
						# 'NUOM-MONOMER[i]',
						# 'NUPC-MONOMER[i]',
						# 'O-SUCCINYLBENZOATE-COA-SYN-MONOMER[c]',
						# 'OCTAPRENYL-METHOXYPHENOL-OH-MONOMER[c]',
						# 'OCTAPRENYL-METHYL-METHOXY-BENZOQ-OH-MON[c]',
						# 'OHMETHYLBILANESYN-MONOMER[c]',
						# 'OPPA-MONOMER[i]',
						# 'OPPD-MONOMER[i]',
						# 'OPPF-MONOMER[i]',
						# 'PD04413[i]',
						# 'PEPCARBOXYKIN-MONOMER[c]',
						# 'PGK[c]',
						# 'PGMI-MONOMER[c]',
						# 'PGPPHOSPHAA-MONOMER[i]',
						# 'PGPPHOSPHAB-MONOMER[i]',
						# 'PHOSGLUCOSAMINEMUT-MONOMER[c]',
						# 'PHOSNACMURPENTATRANS-MONOMER[i]',
						# 'PHOSPHOGLUCMUT-MONOMER[c]',
						# 'PITA-MONOMER[i]',
						# 'PNTA-MONOMER[i]',
						# 'POTA-MONOMER[i]',
						# 'POTD-MONOMER[p]',
						# 'POTF-MONOMER[i]',
						# 'PRAI-IGPS[c]',
						# 'PRIBFAICARPISOM-MONOMER[c]',
						# 'PROV-MONOMER[i]',
						# 'PROX-MONOMER[p]',
						# 'PRPPSYN-MONOMER[c]',
						# 'PSERPHOSPHA-MONOMER[c]',
						# 'PSTB-MONOMER[i]',
						# 'PSTS-MONOMER[i]',
						# 'PUTP-MONOMER[i]',
						# 'RELA-MONOMER[c]',
						# 'RHTC-MONOMER[i]',
						# 'RIBF-MONOMER[c]',
						# 'RIBULP3EPIM-MONOMER[c]',
						# 'SBP-MONOMER[p]',
						# 'SDAC-MONOMER[i]',
						# 'SDH-FE-S[i]',
						# 'SDH-FLAVO[i]',
						# 'SDH-MEMB1[i]',
						# 'SPED-MONOMER[c]',
						# 'SUCCCOASYN-ALPHA[c]',
						# 'TAGAALDOL2-MONOMER[c]',
						# 'TDK-MONOMER[c]',
						# 'TETRAACYLDISACC4KIN-MONOMER[i]',
						# 'THI-P-KIN-MONOMER[c]',
						# 'THIC-MONOMER[c]',
						# 'THIE-MONOMER[c]',
						# 'THIF-MONOMER[i]',
						# 'THIH-MONOMER[c]',
						# 'THII-MONOMER[c]',
						# 'THRESYN-MONOMER[c]',
						# 'TRANSALDOLA-MONOMER[c]',
						# 'TREHALACYTO-MONOMER[c]',
						# 'TREHALOSE6PSYN-MONOMER[c]',
						# 'TREHALOSEPHOSPHASYN-MONOMER[c]',
						# 'TRKG-MONOMER[i]',
						# 'TRKH-MONOMER[i]',
						# 'TRYPSYN-APROTEIN[c]',
						# 'TSA-REDUCT-MONOMER[c]',
						# 'TYRP-MONOMER[i]',
						# 'UDK-MONOMER[c]',
						# 'UDP-NACMURALA-GLU-LIG-MONOMER[c]',
						# 'UDP-NACMURALGLDAPAALIG-MONOMER[c]',
						# 'UDP-NACMURALGLDAPLIG-MONOMER[c]',
						# 'UDPACYLGLCNACDEACETYL-MONOMER[c]',
						# 'UDPNACETYLGLUCOSAMENOLPYRTRANS-MONOMER[c]',
						# 'UDPNACETYLMURAMATEDEHYDROG-MONOMER[c]',
						# 'UGPB-MONOMER[i]',
						# 'URAA-MONOMER[i]',
						# 'UROGENDECARBOX-MONOMER[c]',
						# 'UROGENIIISYN-MONOMER[c]',
						# 'USHA-MONOMER[p]',
						# 'UXAC-MONOMER[c]',
						# 'VALINE-PYRUVATE-AMINOTRANSFER-MONOMER[c]',
						# 'VALS-MONOMER[c]',
						# 'XYLG-MONOMER[i]',
						# 'YCHM-MONOMER[i]',
						# 'YDEA-MONOMER[i]',
						# 'YEEF-MONOMER[i]',
						# 'YEJA-MONOMER[i]',
						# 'YFEP-MONOMER[i]',
						# 'YGJU-MONOMER[i]',
						# 'YHBG-MONOMER[i]',
						# 'YHBN-MONOMER[e]',
						# 'YICE-MONOMER[i]',
						# 'YICM-MONOMER[i]',
						# 'YLIA-MONOMER[i]',
						# 'YLIB-MONOMER[i]',
						# 'ZNUA-MONOMER[p]',
						]

		if NONZERO_ENZYMES:

			# Add one of every enzyme to ensure none are zero
			# enzymeConcentrations = countsToMolar * (enzymeCountsInit + 1)


			# moleculeNames = self.sd.process.complexation.moleculeNames
			# complexNames = [self.sd.process.complexation.moleculeNames[i] for i in np.where((self.sd.process.complexation.stoichMatrix() == 1).sum(axis = 1))[0]]
			# Stoich = self.sd.process.complexation.stoichMatrixMonomers()
			enzymeNames = self.enzymeNames
			
			# print enzymeNames[494], enzymeConcentrations[494]
			# print enzymeNames[1144], enzymeConcentrations[1144]
			# print enzymeNames[2313], enzymeConcentrations[2313]
			# print enzymeNames[3137], enzymeConcentrations[3137]
			# print enzymeNames[4839], enzymeConcentrations[4839]
			# print enzymeNames[3738], enzymeCountsInit[3738] # ARGSUCCINSYN-MONOMER[c]
			# print enzymeNames[1421], enzymeCountsInit[1421] # CPLX0-2401[c]

			enzymeCplx = []

			for id in xrange(0, len(enzymeNames)):

				# if enzymeNames[id] == 'FDNG-MONOMER[p]':
				# 	print id, enzymeNames[id], enzymeConcentrations[id]

				# if enzymeNames[id] == 'FDNH-MONOMER[i]':
				# 	print id, enzymeNames[id], enzymeConcentrations[id]

				# if enzymeNames[id] == 'FDNI-MONOMER[i]':
				# 	print id, enzymeNames[id], enzymeConcentrations[id]

				# if enzymeNames[id] == 'FORMATEDEHYDROGN-CPLX[i]':
				# 	print id, enzymeNames[id], enzymeConcentrations[id]

				# if enzymeNames[id] == 'ALPHA-SUBUNIT-CPLX[i]':
				# 	print id, enzymeNames[id], enzymeConcentrations[id]


				if enzymeNames[id] in setenzymes: 

					# Remove this additional counts in particular enzymes
					# enzymeConcentrations[id] = countsToMolar * 0 #enzymeCountsInit[id]

					enzymeConcentrations[id] = countsToMolar * (enzymeCountsInit[id] + 1)


					# Search enzymatic complexes related to the monomer
					# for monomer in xrange(0, len(moleculeNames)):
					# 	if moleculeNames[monomer] == enzymeNames[id]:
					# 		for cplx in xrange(0, len(complexNames)):
					# 			if Stoich[monomer][cplx] != 0:				
					# 				enzymeCplx.append(complexNames[cplx])

									# print complexNames[cplx]
									# for idCplx in xrange(0, len(enzymeNames)):
									# 	if complexNames[cplx] == enzymeNames[idCplx]:
									# 		enzymeConcentrations[idCplx] = countsToMolar * (enzymeCountsInit[idCplx] + 1)

					# import ipdb; ipdb.set_trace();
					# print enzymeNames[id], enzymeConcentrations[id]

			# print enzymeNames[494], enzymeConcentrations[494]
			# print enzymeNames[1144], enzymeConcentrations[1144]
			# print enzymeNames[2313], enzymeConcentrations[2313]
			# print enzymeNames[3137], enzymeConcentrations[3137]
			# print enzymeNames[4839], enzymeConcentrations[4839]
			

			# import ipdb; ipdb.set_trace();
			# print len(np.unique(enzymeCplx))


		# Make a dictionary of enzyme names to enzyme concentrations
		enzymeConcentrationsDict = dict(zip(self.enzymeNames, enzymeConcentrations))

		# When many estimates exist for a reaction, choose the largest
		if not hasattr(self, "chosenConstraints"):
			# Calculate the constraints in the current conditions
			reactionsDict = self.enzymeKinetics.allReactionsDict(metaboliteConcentrationsDict, enzymeConcentrationsDict)
			oneSidedReactions =  set(self.fba.kineticOneSidedTargetFluxNames())
			self.chosenConstraints = {}
			for reactionID, reactionRate in reactionsDict.iteritems():
				rateOrderedConstraints = sorted(reactionRate.keys(), key=reactionRate.__getitem__, reverse=False)
				kMreactions = [x for x in rateOrderedConstraints if 'kcat' not in x]
				if len(kMreactions) > 0:
					# Take the highest valued constraint with a kM
					constraintID = kMreactions[-1]
				elif len(kMreactions) == 0:
					# Take the higest valued constraint overall
					constraintID = rateOrderedConstraints[-1]
				self.chosenConstraints[reactionID] = {
					"constraintID":constraintID,
					"coefficient":self.constraintMultiplesDict[constraintID],}

		if USE_KINETIC_RATES and self._sim.time() > KINETICS_BURN_IN_PERIOD:
			self.allRateEstimates = self.enzymeKinetics.ratesView(self.allRateReactions, self.chosenConstraints, metaboliteConcentrationsDict, enzymeConcentrationsDict, raiseIfNotFound=True)
			
			# Make kinetic targets numerical zero instead of actually zero for solver stability
			self.allRateEstimates[self.allRateEstimates.asNumber() == 0] = FLUX_UNITS * 1e-20
			self.fba.setKineticTarget(self.allRateReactions, (TIME_UNITS*self.timeStepSec()*self.allRateEstimates).asNumber(COUNTS_UNITS/VOLUME_UNITS), raiseForReversible=False)

		if USE_BASE_RATES:
			# Calculate new rates
			self.baseRatesNew = FLUX_UNITS * self.enzymeReactionMatrix.dot(enzymeConcentrations.asNumber(COUNTS_UNITS / VOLUME_UNITS))
			self.baseRatesNew[self.spontaneousIndices] = (FLUX_UNITS) * np.inf
			# Update allRates
			updateLocations = np.where(self.baseRatesNew.asNumber(FLUX_UNITS) != self.baseRates.asNumber(FLUX_UNITS))
			updateReactions = self.fba.reactionIDs()[updateLocations]
			updateValues = self.baseRatesNew[updateLocations]
			self.baseRates[updateLocations] = updateValues
			# Set new reaction rate limits
			self.fba.setMaxReactionFluxes(updateReactions, (TIME_UNITS*self.timeStepSec()*updateValues).asNumber(COUNTS_UNITS/VOLUME_UNITS), raiseForReversible = False)

		deltaMetabolites = (1 / countsToMolar) * (COUNTS_UNITS / VOLUME_UNITS * self.fba.outputMoleculeLevelsChange())

		metaboliteCountsFinal = np.fmax(stochasticRound(
			self.randomState,
			metaboliteCountsInit + deltaMetabolites.asNumber()
			), 0).astype(np.int64)

		self.metabolites.countsIs(metaboliteCountsFinal)

		# Use GLPK's dualprimal solver, AFTER the first solution
		self.fba._solver._model.set_solver_method_dualprimal()

		self.overconstraintMultiples = (self.fba.reactionFluxes()[self.allRateIndices] / self.allRateEstimates.asNumber(FLUX_UNITS))  
		exFluxes = ((COUNTS_UNITS / VOLUME_UNITS) * self.fba.externalExchangeFluxes() / coefficient).asNumber(units.mmol / units.g / units.h)

		# TODO: report as reactions (#) per second & store volume elsewhere
		self.writeToListener("FBAResults", "reactionFluxes",
			self.fba.reactionFluxes() / self.timeStepSec())
		self.writeToListener("FBAResults", "externalExchangeFluxes",
			exFluxes)
		# self.writeToListener("FBAResults", "objectiveValue", # TODO
		# 	self.fba.objectiveValue() / deltaMetabolites.size) # divide to normalize by number of metabolites
		self.writeToListener("FBAResults", "outputFluxes",
			self.fba.outputMoleculeLevelsChange() / self.timeStepSec())

		self.writeToListener("FBAResults", "rowDualValues",
			self.fba.rowDualValues(self.metaboliteNames))

		self.writeToListener("FBAResults", "columnDualValues",
			self.fba.columnDualValues(self.fba.reactionIDs()))

		self.writeToListener("FBAResults", "kineticObjectiveValues",
			self.fba.kineticObjectiveValues())

		self.writeToListener("FBAResults", "homeostaticObjectiveValues",
			self.fba.homeostaticObjectiveValues())

		self.writeToListener("FBAResults", "homeostaticObjectiveWeight",
			self.fba.homeostaticObjectiveWeight())

		self.writeToListener("EnzymeKinetics", "baseRates",
			self.baseRates.asNumber(FLUX_UNITS))

		self.writeToListener("EnzymeKinetics", "reactionKineticPredictions",
			self.allRateEstimates.asNumber(FLUX_UNITS))

		self.writeToListener("EnzymeKinetics", "overconstraintMultiples",
			self.overconstraintMultiples)

		self.writeToListener("EnzymeKinetics", "kineticTargetFluxes",
			self.fba.kineticTargetFluxes())

		self.writeToListener("EnzymeKinetics", "kineticTargetErrors",
			self.fba.kineticTargetFluxErrors())

		self.writeToListener("EnzymeKinetics", "kineticTargetRelativeDifferences",
			self.fba.kineticTargetFluxRelativeDifferences())

		self.writeToListener("EnzymeKinetics", "metaboliteCountsInit",
			metaboliteCountsInit)

		self.writeToListener("EnzymeKinetics", "metaboliteCountsFinal",
			metaboliteCountsFinal)

		self.writeToListener("EnzymeKinetics", "enzymeCountsInit",
			enzymeCountsInit)

		self.writeToListener("EnzymeKinetics", "metaboliteConcentrations",
			metaboliteConcentrations.asNumber(COUNTS_UNITS / VOLUME_UNITS))

		self.writeToListener("EnzymeKinetics", "countsToMolar",
			countsToMolar.asNumber(COUNTS_UNITS / VOLUME_UNITS))
